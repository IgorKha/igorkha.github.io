"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"benchmarks-miniPC-in-fanless-aluminum-case","metadata":{"permalink":"/blog/benchmarks-miniPC-in-fanless-aluminum-case","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2023-02-07-benchmarks-miniPC-in-fanless-aluminum-case/index.md","source":"@site/blog/2023-02-07-benchmarks-miniPC-in-fanless-aluminum-case/index.md","title":"Benchmarks miniPC in fanless aluminum case","description":"Hardware","date":"2023-02-07T00:00:00.000Z","formattedDate":"February 7, 2023","tags":[{"label":"intel","permalink":"/blog/tags/intel"},{"label":"sbc-bench","permalink":"/blog/tags/sbc-bench"},{"label":"benchmark","permalink":"/blog/tags/benchmark"}],"readingTime":28.685,"hasTruncateMarker":true,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"benchmarks-miniPC-in-fanless-aluminum-case","title":"Benchmarks miniPC in fanless aluminum case","authors":"IgorKha","tags":["intel","sbc-bench","benchmark"]},"nextItem":{"title":"How disable IPv6 networking on Linux","permalink":"/blog/disable-ipv6-networking-on-linux"}},"content":"## Hardware\\n\\n|                   |                                                                                                          |\\n|:-----------------:|:--------------------------------------------------------------------------------------------------------|\\n| **CPU**           | 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz / Intel Iris Xe Graphics  1.30 GHz                        |\\n| **RAM**           | 8GB 2667MT/s (PN: HMA81GS6CJR8N-VK) [2xDDR4 SODIMM/MAX 64Gb]                                             |\\n| **NVMe**          | Fanxiang S500 128GB (SN: FXS500222900092/FW Rev: U0521A0)                                                |\\n| **Network**       | 6x Intel i225-V B3 2,5G RJ45 LANs                                                                        |\\n| **Power Adapter** | 12V-5A (60W) [12-19V ]                                                                                   |\\n| **Other**         | 4xUSB3.0, 1xRJ45 COM, 1xHDMI2.0 4K @ 60Hz UHD, 1xM.2 2242/2280 NVMe/PCIE3.0x4 SSD + 1x2.5\'\'SATA SSD/HDD. |\\n| **Other**         | 1xSIM \u0441\u043b\u043e\u0442, 1xMPCIE wireless slot, support WiFi/3G/4G (choice of 1 of 3)                                 |\\n| **Price**         | AliExpress $550                                                                                          |\\n\\n\x3c!--truncate--\x3e\\n\\n## sbc-bench without cooling\\n\\n```yaml title=\\"./sbc-bench.sh -c\\"\\nsbc-bench v0.9.12  / i7-1165G7 @ 2.80GHz (Tue, 07 Feb 2023 08:23:42 +0000)\\n\\nDistributor ID:\\tUbuntu\\nDescription:\\tUbuntu 20.04.5 LTS\\nRelease:\\t20.04\\nCodename:\\tfocal\\n\\nBIOS/UEFI:\\n\\tVendor: American Megatrends International, LLC.\\n\\tVersion: 5.19\\n\\tRelease Date: 03/30/2021\\n\\tBIOS Revision: 5.19\\n\\n/usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0\\n\\nUptime: 08:23:42 up 19:30,  1 user,  load average: 0.35, 0.09, 0.03,  87.0\xb0C,  35903915\\n\\nLinux 5.4.0-137-generic (supernoserver) \\t02/07/23 \\t_x86_64_\\t(8 CPU)\\n\\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\\n           0.07    0.00    0.02    0.07    0.00   99.84\\n\\nDevice             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd\\nnvme0n1          27.79       906.83        24.68         0.00   63677709    1733225          0\\n\\n              total        used        free      shared  buff/cache   available\\nMem:          7.5Gi       365Mi       7.0Gi       1.0Mi       156Mi       6.9Gi\\nSwap:         4.0Gi       0.0Ki       4.0Gi\\n\\nFilename\\t\\t\\t\\tType\\t\\tSize\\tUsed\\tPriority\\n/swap.img                              \\tfile    \\t4194300\\t512\\t-2\\n\\n##########################################################################\\n\\nIntel P-States: Intel P-state driver initializing, HWP enabled\\n\\nChecking cpufreq OPP:\\n\\nCpufreq OPP: 4700    Measured: 4517 (4688.133/4573.885/4289.001)     (-3.9%)\\nCpufreq OPP:  400    Measured:  402    (403.426/403.314/400.935)\\n\\n##########################################################################\\n\\nHardware sensors:\\n\\nacpitz-acpi-0\\ntemp1:        +27.8 C  (crit = +119.0 C)\\n\\ncoretemp-isa-0000\\nPackage id 0:  +48.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 0:        +47.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 1:        +47.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 2:        +45.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 3:        +48.0 C  (high = +100.0 C, crit = +100.0 C)\\n\\n##########################################################################\\n\\nExecuting benchmark on cpu0:\\n\\ntinymembench v0.4.9 (simple benchmark for memory throughput and latency)\\n\\n==========================================================================\\n== Memory bandwidth tests                                               ==\\n==                                                                      ==\\n== Note 1: 1MB = 1000000 bytes                                          ==\\n== Note 2: Results for \'copy\' tests show how many bytes can be          ==\\n==         copied per second (adding together read and writen           ==\\n==         bytes would have provided twice higher numbers)              ==\\n== Note 3: 2-pass copy means that we are using a small temporary buffer ==\\n==         to first fetch data into it, and only then write it to the   ==\\n==         destination (source -> L1 cache, L1 cache -> destination)    ==\\n== Note 4: If sample standard deviation exceeds 0.1%, it is shown in    ==\\n==         brackets                                                     ==\\n==========================================================================\\n\\n C copy backwards                                     :   6499.5 MB/s (1.3%)\\n C copy backwards (32 byte blocks)                    :   6525.9 MB/s (0.1%)\\n C copy backwards (64 byte blocks)                    :   6530.6 MB/s (2.9%)\\n C copy                                               :   6548.2 MB/s (0.7%)\\n C copy prefetched (32 bytes step)                    :   5511.2 MB/s\\n C copy prefetched (64 bytes step)                    :   5514.0 MB/s\\n C 2-pass copy                                        :   6021.6 MB/s (0.2%)\\n C 2-pass copy prefetched (32 bytes step)             :   4905.5 MB/s (0.2%)\\n C 2-pass copy prefetched (64 bytes step)             :   4898.3 MB/s\\n C fill                                               :  10792.2 MB/s (2.6%)\\n C fill (shuffle within 16 byte blocks)               :  10830.2 MB/s (0.5%)\\n C fill (shuffle within 32 byte blocks)               :  10831.9 MB/s (0.8%)\\n C fill (shuffle within 64 byte blocks)               :  10837.8 MB/s (0.9%)\\n ---\\n standard memcpy                                      :   9893.9 MB/s (0.5%)\\n standard memset                                      :  19776.4 MB/s (0.6%)\\n ---\\n MOVSB copy                                           :   9697.2 MB/s (0.7%)\\n MOVSD copy                                           :   9741.1 MB/s (0.8%)\\n SSE2 copy                                            :   6669.9 MB/s (0.7%)\\n SSE2 nontemporal copy                                :   9742.9 MB/s (1.3%)\\n SSE2 copy prefetched (32 bytes step)                 :   5528.8 MB/s (1.7%)\\n SSE2 copy prefetched (64 bytes step)                 :   5312.6 MB/s (0.4%)\\n SSE2 nontemporal copy prefetched (32 bytes step)     :   6960.9 MB/s (0.6%)\\n SSE2 nontemporal copy prefetched (64 bytes step)     :   6788.5 MB/s (0.4%)\\n SSE2 2-pass copy                                     :   5852.6 MB/s (0.2%)\\n SSE2 2-pass copy prefetched (32 bytes step)          :   4945.0 MB/s\\n SSE2 2-pass copy prefetched (64 bytes step)          :   4974.0 MB/s\\n SSE2 2-pass nontemporal copy                         :   3765.1 MB/s (0.4%)\\n SSE2 fill                                            :   9908.3 MB/s (5.4%)\\n SSE2 nontemporal fill                                :  18289.6 MB/s\\n\\n==========================================================================\\n== Memory latency test                                                  ==\\n==                                                                      ==\\n== Average time is measured for random memory accesses in the buffers   ==\\n== of different sizes. The larger is the buffer, the more significant   ==\\n== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==\\n== accesses. For extremely large buffer sizes we are expecting to see   ==\\n== page table walk with several requests to SDRAM for almost every      ==\\n== memory access (though 64MiB is not nearly large enough to experience ==\\n== this effect to its fullest).                                         ==\\n==                                                                      ==\\n== Note 1: All the numbers are representing extra time, which needs to  ==\\n==         be added to L1 cache latency. The cycle timings for L1 cache ==\\n==         latency can be usually found in the processor documentation. ==\\n== Note 2: Dual random read means that we are simultaneously performing ==\\n==         two independent memory accesses at a time. In the case if    ==\\n==         the memory subsystem can\'t handle multiple outstanding       ==\\n==         requests, dual random read has the same timings as two       ==\\n==         single reads performed one after another.                    ==\\n==========================================================================\\n\\nblock size : single random read / dual random read, [MADV_NOHUGEPAGE]\\n      1024 :    0.0 ns          /     0.1 ns \\n      2048 :    0.0 ns          /     0.1 ns \\n      4096 :    0.0 ns          /     0.1 ns \\n      8192 :    0.0 ns          /     0.0 ns \\n     16384 :    0.0 ns          /     0.1 ns \\n     32768 :    0.0 ns          /     0.1 ns \\n     65536 :    0.5 ns          /     0.9 ns \\n    131072 :    1.2 ns          /     1.6 ns \\n    262144 :    1.6 ns          /     1.9 ns \\n    524288 :    2.5 ns          /     3.0 ns \\n   1048576 :    3.1 ns          /     3.4 ns \\n   2097152 :    6.2 ns          /     8.2 ns \\n   4194304 :    9.0 ns          /    10.8 ns \\n   8388608 :   12.1 ns          /    14.1 ns \\n  16777216 :   27.5 ns          /    40.4 ns \\n  33554432 :   51.0 ns          /    69.0 ns \\n  67108864 :   63.7 ns          /    78.9 ns \\n\\nblock size : single random read / dual random read, [MADV_HUGEPAGE]\\n      1024 :    0.0 ns          /     0.1 ns \\n      2048 :    0.0 ns          /     0.1 ns \\n      4096 :    0.0 ns          /     0.1 ns \\n      8192 :    0.0 ns          /     0.0 ns \\n     16384 :    0.0 ns          /     0.1 ns \\n     32768 :    0.0 ns          /     0.1 ns \\n     65536 :    0.5 ns          /     1.0 ns \\n    131072 :    1.2 ns          /     1.6 ns \\n    262144 :    1.6 ns          /     2.0 ns \\n    524288 :    1.8 ns          /     2.1 ns \\n   1048576 :    1.9 ns          /     1.9 ns \\n   2097152 :    4.9 ns          /     6.9 ns \\n   4194304 :    7.7 ns          /     9.5 ns \\n   8388608 :    8.7 ns          /    10.2 ns \\n  16777216 :   23.4 ns          /    35.0 ns \\n  33554432 :   46.7 ns          /    64.7 ns \\n  67108864 :   59.2 ns          /    74.5 ns \\n\\n##########################################################################\\n\\nExecuting ramlat on cpu0, results in ns:\\n\\n       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR\\n         4k: 1.181 1.181 1.384 1.589 1.143 1.067 1.070 1.110 \\n         8k: 1.081 1.080 1.267 1.469 1.071 1.067 1.072 1.110 \\n        16k: 1.081 1.080 1.268 1.464 1.067 1.067 1.071 1.109 \\n        32k: 1.081 1.080 1.270 1.473 1.067 1.067 1.081 1.113 \\n        64k: 2.998 2.995 3.182 3.383 2.982 2.987 3.036 3.562 \\n       128k: 3.276 3.277 3.488 3.683 2.992 2.987 3.035 3.590 \\n       256k: 3.011 3.000 3.187 3.387 2.987 2.987 3.062 3.602 \\n       512k: 4.523 4.502 4.679 4.891 4.480 4.480 4.532 4.944 \\n      1024k: 5.902 5.743 6.097 6.124 5.667 5.448 5.759 6.726 \\n      2048k: 11.88 12.06 11.84 12.17 11.84 12.34 13.19 14.90 \\n      4096k: 12.85 12.89 12.72 13.19 12.78 13.15 14.30 17.43 \\n      8192k: 16.85 14.83 15.16 15.27 14.86 14.89 15.81 18.76 \\n     16384k: 42.35 38.43 41.21 39.81 43.09 42.60 46.77 54.01 \\n\\n##########################################################################\\n\\nExecuting benchmark twice on cluster 0\\n\\nOpenSSL 1.1.1f, built on 31 Mar 2020\\ntype             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes\\naes-128-cbc    1067751.63k  1668484.65k  1953877.25k  2018499.58k  1815587.50k  2034013.53k\\naes-128-cbc    1009441.90k  1768923.52k  1952441.69k  1802215.08k  2030389.93k  2030807.72k\\naes-192-cbc     909793.03k  1576942.51k  1583106.30k  1629583.36k  1716461.57k  1533444.10k\\naes-192-cbc    1017256.41k  1614196.86k  1531869.70k  1738807.30k  1644101.63k  1659071.15k\\naes-256-cbc     932419.00k  1245460.78k  1449495.47k  1479657.47k  1329119.23k  1488846.85k\\naes-256-cbc     916362.41k  1347310.63k  1481127.17k  1340278.10k  1514960.21k  1514345.81k\\n\\n##########################################################################\\n\\nExecuting benchmark single-threaded on cpu0\\n\\n7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21\\np7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1),ASM,AES-NI)\\n\\n11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1)\\nCPU Freq: - - - - - - - - -\\n\\nRAM size:    7695 MB,  # CPU hardware threads:   8\\nRAM usage:    435 MB,  # Benchmark threads:      1\\n\\n                       Compressing  |                  Decompressing\\nDict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating\\n         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS\\n\\n22:       5078   100   4941   4940  |      53819   100   4596   4595\\n23:       5029   100   5125   5124  |      49198   100   4259   4259\\n24:       4674   100   5026   5026  |      48162   100   4229   4228\\n25:       4265   100   4870   4870  |      51415   100   4577   4576\\n----------------------------------  | ------------------------------\\nAvr:             100   4991   4990  |              100   4415   4415\\nTot:             100   4703   4702\\n\\n##########################################################################\\n\\nExecuting benchmark 3 times multi-threaded on CPUs 0-7\\n\\n7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21\\np7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1),ASM,AES-NI)\\n\\n11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1)\\nCPU Freq: 64000000 - - - - - - - -\\n\\nRAM size:    7695 MB,  # CPU hardware threads:   8\\nRAM usage:   1765 MB,  # Benchmark threads:      8\\n\\n                       Compressing  |                  Decompressing\\nDict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating\\n         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS\\n\\n22:      23823   682   3397  23175  |     235635   797   2521  20099\\n23:      21116   694   3099  21515  |     232997   798   2527  20163\\n24:      22220   740   3227  23892  |     212746   797   2342  18672\\n25:      19755   754   2993  22556  |     204061   798   2276  18161\\n----------------------------------  | ------------------------------\\nAvr:             718   3179  22784  |              798   2416  19274\\nTot:             758   2798  21029\\n\\n7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21\\np7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1),ASM,AES-NI)\\n\\n11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1)\\nCPU Freq: - - - - - - - - 2048000000\\n\\nRAM size:    7695 MB,  # CPU hardware threads:   8\\nRAM usage:   1765 MB,  # Benchmark threads:      8\\n\\n                       Compressing  |                  Decompressing\\nDict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating\\n         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS\\n\\n22:      21512   681   3072  20927  |     213255   796   2286  18190\\n23:      22029   748   3000  22446  |     210363   797   2285  18204\\n24:      20923   748   3008  22497  |     208117   798   2288  18266\\n25:      20153   753   3056  23011  |     204567   797   2284  18206\\n----------------------------------  | ------------------------------\\nAvr:             733   3034  22220  |              797   2286  18216\\nTot:             765   2660  20218\\n\\n7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21\\np7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,8 CPUs 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1),ASM,AES-NI)\\n\\n11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz (806C1)\\nCPU Freq: - - - - - - - - -\\n\\nRAM size:    7695 MB,  # CPU hardware threads:   8\\nRAM usage:   1765 MB,  # Benchmark threads:      8\\n\\n                       Compressing  |                  Decompressing\\nDict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating\\n         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS\\n\\n22:      21527   696   3011  20942  |     212475   795   2279  18123\\n23:      21270   731   2966  21672  |     209886   797   2279  18163\\n24:      20724   743   2999  22284  |     205801   793   2277  18063\\n25:      19838   743   3049  22651  |     203586   796   2276  18118\\n----------------------------------  | ------------------------------\\nAvr:             728   3006  21887  |              795   2278  18117\\nTot:             762   2642  20002\\n\\nCompression: 22784,22220,21887\\nDecompression: 19274,18216,18117\\nTotal: 21029,20218,20002\\n\\n##########################################################################\\n\\n** cpuminer-multi 1.3.7 by tpruvot@github **\\nBTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)\\n\\n[2023-02-07 08:33:40] 8 miner threads started, using \'scrypt\' algorithm.\\n[2023-02-07 08:33:40] CPU #0: 11.70 kH/s\\n[2023-02-07 08:33:40] CPU #1: 11.01 kH/s\\n[2023-02-07 08:33:40] CPU #2: 11.13 kH/s\\n[2023-02-07 08:33:40] CPU #3: 10.83 kH/s\\n[2023-02-07 08:33:40] CPU #5: 10.60 kH/s\\n[2023-02-07 08:33:40] CPU #6: 10.44 kH/s\\n[2023-02-07 08:33:40] CPU #7: 10.54 kH/s\\n[2023-02-07 08:33:40] CPU #4: 8.99 kH/s\\n[2023-02-07 08:33:45] Total: 82.07 kH/s\\n[2023-02-07 08:33:46] CPU #3: 8.93 kH/s\\n[2023-02-07 08:33:46] CPU #1: 8.93 kH/s\\n[2023-02-07 08:33:46] CPU #2: 8.96 kH/s\\n[2023-02-07 08:33:46] CPU #0: 8.91 kH/s\\n[2023-02-07 08:33:50] CPU #4: 8.91 kH/s\\n[2023-02-07 08:33:50] CPU #6: 8.94 kH/s\\n[2023-02-07 08:33:50] CPU #7: 8.91 kH/s\\n[2023-02-07 08:33:50] Total: 71.44 kH/s\\n[2023-02-07 08:33:50] CPU #5: 8.97 kH/s\\n[2023-02-07 08:33:55] CPU #3: 8.92 kH/s\\n[2023-02-07 08:33:55] CPU #1: 8.92 kH/s\\n[2023-02-07 08:33:55] CPU #2: 8.94 kH/s\\n[2023-02-07 08:33:55] CPU #0: 8.92 kH/s\\n[2023-02-07 08:33:55] Total: 71.44 kH/s\\n[2023-02-07 08:34:00] CPU #4: 8.92 kH/s\\n[2023-02-07 08:34:00] CPU #6: 8.94 kH/s\\n[2023-02-07 08:34:00] CPU #7: 8.92 kH/s\\n[2023-02-07 08:34:00] Total: 71.45 kH/s\\n[2023-02-07 08:34:00] CPU #5: 8.97 kH/s\\n[2023-02-07 08:34:05] CPU #3: 8.93 kH/s\\n[2023-02-07 08:34:05] CPU #1: 8.94 kH/s\\n[2023-02-07 08:34:05] CPU #2: 8.95 kH/s\\n[2023-02-07 08:34:05] CPU #0: 8.93 kH/s\\n[2023-02-07 08:34:05] Total: 71.53 kH/s\\n[2023-02-07 08:34:10] CPU #4: 8.91 kH/s\\n[2023-02-07 08:34:10] CPU #6: 8.94 kH/s\\n[2023-02-07 08:34:10] CPU #7: 8.92 kH/s\\n[2023-02-07 08:34:10] Total: 71.43 kH/s\\n[2023-02-07 08:34:10] CPU #5: 8.96 kH/s\\n[2023-02-07 08:34:15] CPU #3: 8.92 kH/s\\n[2023-02-07 08:34:15] CPU #1: 8.93 kH/s\\n[2023-02-07 08:34:15] CPU #2: 8.94 kH/s\\n[2023-02-07 08:34:15] CPU #0: 8.91 kH/s\\n[2023-02-07 08:34:15] Total: 71.43 kH/s\\n[2023-02-07 08:34:20] CPU #4: 8.91 kH/s\\n[2023-02-07 08:34:20] CPU #6: 8.93 kH/s\\n[2023-02-07 08:34:20] CPU #7: 8.91 kH/s\\n[2023-02-07 08:34:20] Total: 71.38 kH/s\\n[2023-02-07 08:34:20] CPU #5: 8.97 kH/s\\n[2023-02-07 08:34:25] CPU #3: 8.91 kH/s\\n[2023-02-07 08:34:25] CPU #1: 8.93 kH/s\\n[2023-02-07 08:34:25] CPU #2: 8.91 kH/s\\n[2023-02-07 08:34:25] CPU #0: 8.92 kH/s\\n[2023-02-07 08:34:25] Total: 71.43 kH/s\\n[2023-02-07 08:34:30] CPU #4: 8.91 kH/s\\n[2023-02-07 08:34:30] CPU #6: 8.93 kH/s\\n[2023-02-07 08:34:30] CPU #7: 8.92 kH/s\\n[2023-02-07 08:34:30] Total: 71.41 kH/s\\n[2023-02-07 08:34:30] CPU #5: 8.96 kH/s\\n[2023-02-07 08:34:35] CPU #3: 8.91 kH/s\\n[2023-02-07 08:34:35] CPU #1: 8.93 kH/s\\n[2023-02-07 08:34:35] CPU #2: 8.92 kH/s\\n[2023-02-07 08:34:35] CPU #0: 8.91 kH/s\\n[2023-02-07 08:34:35] Total: 71.34 kH/s\\n[2023-02-07 08:34:36] CPU #5: 8.96 kH/s\\n[2023-02-07 08:34:40] CPU #4: 8.90 kH/s\\n[2023-02-07 08:34:40] CPU #6: 8.92 kH/s\\n[2023-02-07 08:34:41] CPU #7: 8.90 kH/s\\n[2023-02-07 08:34:41] Total: 71.33 kH/s\\n[2023-02-07 08:34:45] Total: 71.34 kH/s\\n[2023-02-07 08:34:45] CPU #5: 8.96 kH/s\\n[2023-02-07 08:34:45] CPU #3: 8.91 kH/s\\n[2023-02-07 08:34:45] CPU #1: 8.92 kH/s\\n[2023-02-07 08:34:45] CPU #2: 8.92 kH/s\\n[2023-02-07 08:34:45] CPU #0: 8.91 kH/s\\n[2023-02-07 08:34:50] CPU #7: 8.90 kH/s\\n[2023-02-07 08:34:50] Total: 71.33 kH/s\\n[2023-02-07 08:34:50] CPU #4: 8.90 kH/s\\n[2023-02-07 08:34:50] CPU #6: 8.91 kH/s\\n[2023-02-07 08:34:55] Total: 71.28 kH/s\\n[2023-02-07 08:34:55] CPU #5: 8.94 kH/s\\n[2023-02-07 08:34:55] CPU #3: 8.90 kH/s\\n[2023-02-07 08:34:55] CPU #1: 8.91 kH/s\\n[2023-02-07 08:34:55] CPU #2: 8.92 kH/s\\n[2023-02-07 08:34:55] CPU #0: 8.90 kH/s\\n[2023-02-07 08:35:00] CPU #7: 8.90 kH/s\\n[2023-02-07 08:35:00] Total: 71.29 kH/s\\n[2023-02-07 08:35:00] CPU #4: 8.89 kH/s\\n[2023-02-07 08:35:00] CPU #6: 8.92 kH/s\\n[2023-02-07 08:35:05] Total: 71.27 kH/s\\n[2023-02-07 08:35:05] CPU #5: 8.95 kH/s\\n[2023-02-07 08:35:05] CPU #3: 8.90 kH/s\\n[2023-02-07 08:35:05] CPU #1: 8.89 kH/s\\n[2023-02-07 08:35:05] CPU #2: 8.92 kH/s\\n[2023-02-07 08:35:05] CPU #0: 8.87 kH/s\\n[2023-02-07 08:35:10] CPU #7: 8.89 kH/s\\n[2023-02-07 08:35:10] Total: 71.23 kH/s\\n[2023-02-07 08:35:10] CPU #4: 8.89 kH/s\\n[2023-02-07 08:35:10] CPU #6: 8.91 kH/s\\n[2023-02-07 08:35:15] Total: 71.24 kH/s\\n[2023-02-07 08:35:15] CPU #5: 8.94 kH/s\\n[2023-02-07 08:35:15] CPU #3: 8.89 kH/s\\n[2023-02-07 08:35:15] CPU #1: 8.90 kH/s\\n[2023-02-07 08:35:15] CPU #2: 8.91 kH/s\\n[2023-02-07 08:35:15] CPU #0: 8.89 kH/s\\n[2023-02-07 08:35:20] CPU #7: 8.89 kH/s\\n[2023-02-07 08:35:20] Total: 71.22 kH/s\\n[2023-02-07 08:35:20] CPU #4: 8.89 kH/s\\n[2023-02-07 08:35:20] CPU #6: 8.91 kH/s\\n[2023-02-07 08:35:25] CPU #5: 8.95 kH/s\\n[2023-02-07 08:35:25] Total: 71.22 kH/s\\n[2023-02-07 08:35:25] CPU #3: 8.89 kH/s\\n[2023-02-07 08:35:25] CPU #1: 8.90 kH/s\\n[2023-02-07 08:35:25] CPU #2: 8.92 kH/s\\n[2023-02-07 08:35:25] CPU #0: 8.90 kH/s\\n[2023-02-07 08:35:30] CPU #7: 8.89 kH/s\\n[2023-02-07 08:35:30] Total: 71.26 kH/s\\n[2023-02-07 08:35:30] CPU #4: 8.89 kH/s\\n[2023-02-07 08:35:30] CPU #6: 8.91 kH/s\\n[2023-02-07 08:35:35] Total: 71.25 kH/s\\n[2023-02-07 08:35:35] CPU #5: 8.93 kH/s\\n[2023-02-07 08:35:35] CPU #3: 8.89 kH/s\\n[2023-02-07 08:35:35] CPU #1: 8.90 kH/s\\n[2023-02-07 08:35:35] CPU #2: 8.91 kH/s\\n[2023-02-07 08:35:35] CPU #0: 8.89 kH/s\\n[2023-02-07 08:35:40] CPU #7: 8.88 kH/s\\n[2023-02-07 08:35:40] Total: 71.18 kH/s\\n[2023-02-07 08:35:40] CPU #4: 8.88 kH/s\\n[2023-02-07 08:35:40] CPU #6: 8.90 kH/s\\n[2023-02-07 08:35:45] Total: 71.14 kH/s\\n[2023-02-07 08:35:45] CPU #5: 8.92 kH/s\\n[2023-02-07 08:35:45] CPU #3: 8.87 kH/s\\n[2023-02-07 08:35:45] CPU #1: 8.89 kH/s\\n[2023-02-07 08:35:45] CPU #2: 8.89 kH/s\\n[2023-02-07 08:35:45] CPU #0: 8.85 kH/s\\n[2023-02-07 08:35:50] CPU #7: 8.89 kH/s\\n[2023-02-07 08:35:50] Total: 71.08 kH/s\\n[2023-02-07 08:35:50] CPU #4: 8.88 kH/s\\n[2023-02-07 08:35:50] CPU #6: 8.91 kH/s\\n[2023-02-07 08:35:55] Total: 71.19 kH/s\\n[2023-02-07 08:35:55] CPU #5: 8.93 kH/s\\n[2023-02-07 08:35:55] CPU #3: 8.89 kH/s\\n[2023-02-07 08:35:55] CPU #1: 8.90 kH/s\\n[2023-02-07 08:35:55] CPU #2: 8.91 kH/s\\n[2023-02-07 08:35:55] CPU #0: 8.90 kH/s\\n[2023-02-07 08:36:00] CPU #7: 8.86 kH/s\\n[2023-02-07 08:36:00] Total: 71.19 kH/s\\n[2023-02-07 08:36:00] CPU #4: 8.86 kH/s\\n[2023-02-07 08:36:00] CPU #6: 8.88 kH/s\\n[2023-02-07 08:36:05] Total: 71.03 kH/s\\n[2023-02-07 08:36:05] CPU #5: 8.92 kH/s\\n[2023-02-07 08:36:05] CPU #3: 8.87 kH/s\\n[2023-02-07 08:36:05] CPU #1: 8.89 kH/s\\n[2023-02-07 08:36:05] CPU #2: 8.89 kH/s\\n[2023-02-07 08:36:05] CPU #0: 8.86 kH/s\\n[2023-02-07 08:36:10] CPU #7: 8.86 kH/s\\n[2023-02-07 08:36:10] Total: 71.04 kH/s\\n[2023-02-07 08:36:10] CPU #4: 8.85 kH/s\\n[2023-02-07 08:36:10] CPU #6: 8.87 kH/s\\n[2023-02-07 08:36:15] Total: 70.93 kH/s\\n[2023-02-07 08:36:15] CPU #5: 8.89 kH/s\\n[2023-02-07 08:36:15] CPU #3: 8.84 kH/s\\n[2023-02-07 08:36:15] CPU #1: 8.85 kH/s\\n[2023-02-07 08:36:15] CPU #2: 8.86 kH/s\\n[2023-02-07 08:36:15] CPU #0: 8.84 kH/s\\n[2023-02-07 08:36:20] CPU #7: 8.87 kH/s\\n[2023-02-07 08:36:20] Total: 70.85 kH/s\\n[2023-02-07 08:36:20] CPU #4: 8.86 kH/s\\n[2023-02-07 08:36:20] CPU #6: 8.89 kH/s\\n[2023-02-07 08:36:25] Total: 71.05 kH/s\\n[2023-02-07 08:36:25] CPU #5: 8.92 kH/s\\n[2023-02-07 08:36:25] CPU #3: 8.87 kH/s\\n[2023-02-07 08:36:25] CPU #1: 8.89 kH/s\\n[2023-02-07 08:36:25] CPU #2: 8.89 kH/s\\n[2023-02-07 08:36:25] CPU #0: 8.84 kH/s\\n[2023-02-07 08:36:30] CPU #7: 8.88 kH/s\\n[2023-02-07 08:36:30] Total: 71.07 kH/s\\n[2023-02-07 08:36:30] CPU #4: 8.87 kH/s\\n[2023-02-07 08:36:30] CPU #6: 8.89 kH/s\\n[2023-02-07 08:36:35] Total: 71.05 kH/s\\n[2023-02-07 08:36:35] CPU #5: 8.89 kH/s\\n[2023-02-07 08:36:35] CPU #3: 8.83 kH/s\\n[2023-02-07 08:36:35] CPU #1: 8.84 kH/s\\n[2023-02-07 08:36:35] CPU #2: 8.85 kH/s\\n[2023-02-07 08:36:35] CPU #0: 8.83 kH/s\\n[2023-02-07 08:36:40] CPU #7: 8.83 kH/s\\n[2023-02-07 08:36:40] Total: 70.76 kH/s\\n[2023-02-07 08:36:40] CPU #4: 8.83 kH/s\\n[2023-02-07 08:36:40] CPU #6: 8.85 kH/s\\n[2023-02-07 08:36:45] Total: 70.79 kH/s\\n[2023-02-07 08:36:45] CPU #5: 8.89 kH/s\\n[2023-02-07 08:36:45] CPU #3: 8.84 kH/s\\n[2023-02-07 08:36:45] CPU #1: 8.85 kH/s\\n[2023-02-07 08:36:45] CPU #2: 8.85 kH/s\\n[2023-02-07 08:36:45] CPU #0: 8.83 kH/s\\n[2023-02-07 08:36:46] CPU #6: 8.85 kH/s\\n[2023-02-07 08:36:50] CPU #7: 8.81 kH/s\\n[2023-02-07 08:36:50] Total: 70.72 kH/s\\n[2023-02-07 08:36:50] CPU #4: 8.81 kH/s\\n[2023-02-07 08:36:54] CPU #6: 8.86 kH/s\\n[2023-02-07 08:36:55] Total: 70.65 kH/s\\n[2023-02-07 08:36:55] CPU #5: 8.89 kH/s\\n[2023-02-07 08:36:55] CPU #3: 8.84 kH/s\\n[2023-02-07 08:36:55] CPU #1: 8.85 kH/s\\n[2023-02-07 08:36:55] CPU #2: 8.86 kH/s\\n[2023-02-07 08:36:55] CPU #0: 8.85 kH/s\\n[2023-02-07 08:37:00] CPU #6: 8.84 kH/s\\n[2023-02-07 08:37:00] CPU #7: 8.83 kH/s\\n[2023-02-07 08:37:00] Total: 70.79 kH/s\\n[2023-02-07 08:37:00] CPU #4: 8.82 kH/s\\n[2023-02-07 08:37:05] Total: 70.69 kH/s\\n[2023-02-07 08:37:05] CPU #5: 8.88 kH/s\\n[2023-02-07 08:37:05] CPU #3: 8.84 kH/s\\n[2023-02-07 08:37:05] CPU #1: 8.85 kH/s\\n[2023-02-07 08:37:05] CPU #2: 8.86 kH/s\\n[2023-02-07 08:37:05] CPU #0: 8.81 kH/s\\n[2023-02-07 08:37:10] CPU #6: 8.85 kH/s\\n[2023-02-07 08:37:10] CPU #7: 8.82 kH/s\\n[2023-02-07 08:37:10] Total: 70.73 kH/s\\n[2023-02-07 08:37:10] CPU #4: 8.81 kH/s\\n[2023-02-07 08:37:15] Total: 70.65 kH/s\\n[2023-02-07 08:37:15] CPU #5: 8.85 kH/s\\n[2023-02-07 08:37:15] CPU #3: 8.81 kH/s\\n[2023-02-07 08:37:15] CPU #1: 8.82 kH/s\\n[2023-02-07 08:37:15] CPU #2: 8.83 kH/s\\n[2023-02-07 08:37:15] CPU #0: 8.81 kH/s\\n[2023-02-07 08:37:20] CPU #6: 8.86 kH/s\\n[2023-02-07 08:37:20] CPU #7: 8.84 kH/s\\n[2023-02-07 08:37:20] Total: 70.63 kH/s\\n[2023-02-07 08:37:20] CPU #4: 8.82 kH/s\\n[2023-02-07 08:37:25] Total: 70.77 kH/s\\n[2023-02-07 08:37:25] CPU #5: 8.87 kH/s\\n[2023-02-07 08:37:25] CPU #3: 8.84 kH/s\\n[2023-02-07 08:37:25] CPU #1: 8.85 kH/s\\n[2023-02-07 08:37:25] CPU #2: 8.86 kH/s\\n[2023-02-07 08:37:25] CPU #0: 8.83 kH/s\\n[2023-02-07 08:37:30] CPU #6: 8.84 kH/s\\n[2023-02-07 08:37:30] CPU #7: 8.82 kH/s\\n[2023-02-07 08:37:30] Total: 70.74 kH/s\\n[2023-02-07 08:37:30] CPU #4: 8.81 kH/s\\n[2023-02-07 08:37:35] Total: 70.66 kH/s\\n[2023-02-07 08:37:35] CPU #5: 8.86 kH/s\\n[2023-02-07 08:37:35] CPU #3: 8.83 kH/s\\n[2023-02-07 08:37:35] CPU #1: 8.83 kH/s\\n[2023-02-07 08:37:35] CPU #2: 8.85 kH/s\\n[2023-02-07 08:37:35] CPU #0: 8.83 kH/s\\n[2023-02-07 08:37:40] CPU #6: 8.84 kH/s\\n[2023-02-07 08:37:40] CPU #7: 8.82 kH/s\\n[2023-02-07 08:37:40] Total: 70.68 kH/s\\n[2023-02-07 08:37:40] CPU #4: 8.81 kH/s\\n[2023-02-07 08:37:45] Total: 70.63 kH/s\\n[2023-02-07 08:37:45] CPU #5: 8.86 kH/s\\n[2023-02-07 08:37:45] CPU #3: 8.82 kH/s\\n[2023-02-07 08:37:45] CPU #1: 8.82 kH/s\\n[2023-02-07 08:37:45] CPU #2: 8.84 kH/s\\n[2023-02-07 08:37:45] CPU #0: 8.81 kH/s\\n[2023-02-07 08:37:50] CPU #6: 8.83 kH/s\\n[2023-02-07 08:37:50] CPU #7: 8.82 kH/s\\n[2023-02-07 08:37:50] Total: 70.61 kH/s\\n[2023-02-07 08:37:50] CPU #4: 8.82 kH/s\\n[2023-02-07 08:37:55] Total: 70.68 kH/s\\n[2023-02-07 08:37:55] CPU #5: 8.86 kH/s\\n[2023-02-07 08:37:55] CPU #3: 8.81 kH/s\\n[2023-02-07 08:37:55] CPU #1: 8.83 kH/s\\n[2023-02-07 08:37:55] CPU #2: 8.83 kH/s\\n[2023-02-07 08:37:55] CPU #0: 8.80 kH/s\\n[2023-02-07 08:38:00] CPU #6: 8.82 kH/s\\n[2023-02-07 08:38:00] CPU #7: 8.80 kH/s\\n[2023-02-07 08:38:00] Total: 70.54 kH/s\\n[2023-02-07 08:38:00] CPU #4: 8.79 kH/s\\n[2023-02-07 08:38:05] CPU #5: 8.85 kH/s\\n[2023-02-07 08:38:05] Total: 70.47 kH/s\\n[2023-02-07 08:38:05] CPU #3: 8.80 kH/s\\n[2023-02-07 08:38:05] CPU #1: 8.80 kH/s\\n[2023-02-07 08:38:05] CPU #2: 8.82 kH/s\\n[2023-02-07 08:38:05] CPU #0: 8.79 kH/s\\n[2023-02-07 08:38:10] CPU #6: 8.84 kH/s\\n[2023-02-07 08:38:10] CPU #7: 8.81 kH/s\\n[2023-02-07 08:38:10] Total: 70.50 kH/s\\n[2023-02-07 08:38:10] CPU #4: 8.80 kH/s\\n[2023-02-07 08:38:15] Total: 70.54 kH/s\\n[2023-02-07 08:38:15] CPU #5: 8.84 kH/s\\n[2023-02-07 08:38:15] CPU #3: 8.80 kH/s\\n[2023-02-07 08:38:15] CPU #1: 8.81 kH/s\\n[2023-02-07 08:38:15] CPU #2: 8.81 kH/s\\n[2023-02-07 08:38:15] CPU #0: 8.78 kH/s\\n[2023-02-07 08:38:20] CPU #6: 8.79 kH/s\\n[2023-02-07 08:38:20] CPU #7: 8.77 kH/s\\n[2023-02-07 08:38:20] Total: 70.39 kH/s\\n[2023-02-07 08:38:20] CPU #4: 8.75 kH/s\\n[2023-02-07 08:38:25] Total: 70.24 kH/s\\n[2023-02-07 08:38:25] CPU #5: 8.83 kH/s\\n[2023-02-07 08:38:25] CPU #3: 8.79 kH/s\\n[2023-02-07 08:38:25] CPU #1: 8.80 kH/s\\n[2023-02-07 08:38:25] CPU #2: 8.82 kH/s\\n[2023-02-07 08:38:25] CPU #0: 8.78 kH/s\\n[2023-02-07 08:38:30] CPU #6: 8.80 kH/s\\n[2023-02-07 08:38:30] CPU #7: 8.79 kH/s\\n[2023-02-07 08:38:30] Total: 70.39 kH/s\\n[2023-02-07 08:38:30] CPU #4: 8.77 kH/s\\n[2023-02-07 08:38:35] Total: 70.29 kH/s\\n[2023-02-07 08:38:35] CPU #5: 8.82 kH/s\\n[2023-02-07 08:38:35] CPU #3: 8.77 kH/s\\n[2023-02-07 08:38:35] CPU #1: 8.78 kH/s\\n[2023-02-07 08:38:35] CPU #2: 8.79 kH/s\\n[2023-02-07 08:38:35] CPU #0: 8.76 kH/s\\n\\nTotal Scores: 82.07,71.53,71.45,71.44,71.43,71.41,71.38,71.34,71.33,71.29,71.28,71.27,71.26,71.25,71.24,71.23,71.22,71.19,71.18,71.14,71.08,71.07,71.05,71.04,71.03,70.93,70.85,70.79,70.77,70.76,70.74,70.73,70.72,70.69,70.68,70.66,70.65,70.63,70.61,70.54,70.50,70.47,70.39,70.29,70.24\\n\\n##########################################################################\\n\\nTesting maximum cpufreq again, still under full load. System health now:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:38:26: 2600MHz  8.02 100%   0%  99%   0%   0%   0%  92.0\xb0C\\n\\nChecking cpufreq OPP:\\n\\nCpufreq OPP: 4700    Measured: 4545 (4626.429/4509.582/4501.231)     (-3.3%)\\n\\n##########################################################################\\n\\nHardware sensors:\\n\\nacpitz-acpi-0\\ntemp1:        +27.8 C  (crit = +119.0 C)\\n\\ncoretemp-isa-0000\\nPackage id 0:  +99.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 0:        +99.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 1:        +65.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 2:        +77.0 C  (high = +100.0 C, crit = +100.0 C)\\nCore 3:        +63.0 C  (high = +100.0 C, crit = +100.0 C)\\n\\n##########################################################################\\n\\nThermal source: /sys/devices/virtual/thermal/thermal_zone1/ (x86_pkg_temp)\\n\\nSystem health while running tinymembench:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:23:49: 4347MHz  0.45   0%   0%   0%   0%   0%   0%  79.0\xb0C\\n08:24:29: 4299MHz  0.72  12%   0%  12%   0%   0%   0%  88.0\xb0C\\n08:25:09: 4627MHz  0.86  12%   0%  12%   0%   0%   0%  97.0\xb0C\\n08:25:49: 4290MHz  0.93  12%   0%  12%   0%   0%   0%  86.0\xb0C\\n08:26:29: 4557MHz  0.96  12%   0%  12%   0%   0%   0%  98.0\xb0C\\n08:27:09: 4628MHz  0.98  12%   0%  12%   0%   0%   0%  97.0\xb0C\\n08:27:49: 4697MHz  0.99  12%   0%  12%   0%   0%   0%  91.0\xb0C\\n08:28:29: 4676MHz  1.00  12%   0%  12%   0%   0%   0%  95.0\xb0C\\n\\nSystem health while running ramlat:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:28:51: 4106MHz  1.00   0%   0%   0%   0%   0%   0%  100.0\xb0C\\n08:28:54: 4659MHz  1.00  12%   0%  12%   0%   0%   0%  91.0\xb0C\\n08:28:57: 4683MHz  1.00  12%   0%  12%   0%   0%   0%  96.0\xb0C\\n08:29:00: 4297MHz  1.00  12%   0%  12%   0%   0%   0%  77.0\xb0C\\n08:29:03: 4678MHz  1.00  12%   0%  12%   0%   0%   0%  91.0\xb0C\\n08:29:06: 4467MHz  1.00  13%   0%  12%   0%   0%   0%  98.0\xb0C\\n08:29:09: 4612MHz  1.00  12%   0%  12%   0%   0%   0%  94.0\xb0C\\n08:29:12: 4666MHz  1.00  12%   0%  12%   0%   0%   0%  91.0\xb0C\\n\\nSystem health while running OpenSSL benchmark:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:29:13: 3556MHz  1.00   0%   0%   0%   0%   0%   0%  100.0\xb0C\\n08:29:29: 1056MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:29:45:  660MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:30:01: 1441MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:30:17: 4098MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:30:33:  988MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:30:49: 4167MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n\\nSystem health while running 7-zip single core benchmark:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:31:01: 4172MHz  1.00   0%   0%   0%   0%   0%   0%  100.0\xb0C\\n08:31:06: 4132MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:31:11: 4172MHz  1.00  12%   0%  12%   0%   0%   0%  99.0\xb0C\\n08:31:16: 4224MHz  1.00  12%   0%  12%   0%   0%   0%  100.0\xb0C\\n08:31:21: 4218MHz  1.00  12%   0%  12%   0%   0%   0%  99.0\xb0C\\n08:31:26: 2800MHz  1.00  12%   0%  12%   0%   0%   0%  66.0\xb0C\\n08:31:31: 4166MHz  1.00  12%   0%  12%   0%   0%   0%  99.0\xb0C\\n\\nSystem health while running 7-zip multi core benchmark:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:31:32: 3898MHz  1.00   0%   0%   0%   0%   0%   0%  100.0\xb0C\\n08:31:42: 3158MHz  1.64  94%   0%  93%   0%   0%   0%  100.0\xb0C\\n08:31:52: 2800MHz  2.62  95%   0%  94%   0%   0%   0%  100.0\xb0C\\n08:32:02: 2800MHz  3.45  91%   0%  91%   0%   0%   0%  85.0\xb0C\\n08:32:13: 2889MHz  4.15  98%   0%  97%   0%   0%   0%  86.0\xb0C\\n08:32:23: 2900MHz  4.74  91%   0%  91%   0%   0%   0%  88.0\xb0C\\n08:32:33: 3339MHz  5.24  93%   0%  93%   0%   0%   0%  94.0\xb0C\\n08:32:43: 4057MHz  5.74  95%   0%  94%   0%   0%   0%  100.0\xb0C\\n08:32:54: 2900MHz  6.01  94%   1%  93%   0%   0%   0%  87.0\xb0C\\n08:33:04: 2866MHz  6.32  96%   0%  95%   0%   0%   0%  88.0\xb0C\\n08:33:15: 2875MHz  6.76  97%   0%  96%   0%   0%   0%  88.0\xb0C\\n08:33:26: 2900MHz  6.66  95%   0%  94%   0%   0%   0%  88.0\xb0C\\n08:33:36: 2900MHz  6.86  90%   1%  89%   0%   0%   0%  88.0\xb0C\\n\\nSystem health while running cpuminer:\\n\\nTime        CPU    load %cpu %sys %usr %nice %io %irq   Temp\\n08:33:42: 2628MHz  6.95   0%   0%   0%   0%   0%   0%  90.0\xb0C\\n08:34:23: 2613MHz  7.47 100%   0%  99%   0%   0%   0%  88.0\xb0C\\n08:35:03: 2600MHz  7.73 100%   0%  99%   0%   0%   0%  90.0\xb0C\\n08:35:44: 2600MHz  7.86 100%   0%  99%   0%   0%   0%  90.0\xb0C\\n08:36:24: 2600MHz  7.93 100%   0%  99%   0%   0%   0%  91.0\xb0C\\n08:37:05: 2600MHz  8.08 100%   0%  99%   0%   0%   0%  92.0\xb0C\\n08:37:46: 2600MHz  8.04 100%   0%  99%   0%   0%   0%  93.0\xb0C\\n08:38:26: 2600MHz  8.02 100%   0%  99%   0%   0%   0%  92.0\xb0C\\n\\n##########################################################################\\n\\ndmesg output while running the benchmarks:\\n\\n[70524.549039] mce: CPU4: Core temperature above threshold, cpu clock throttled (total events = 3058)\\n[70524.549040] mce: CPU0: Core temperature above threshold, cpu clock throttled (total events = 3058)\\n[70524.549044] mce: CPU0: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549044] mce: CPU4: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549134] mce: CPU1: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549137] mce: CPU7: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549138] mce: CPU5: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549139] mce: CPU6: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549140] mce: CPU3: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.549141] mce: CPU2: Package temperature above threshold, cpu clock throttled (total events = 38267)\\n[70524.569175] mce: CPU0: Core temperature/speed normal\\n[70524.569176] mce: CPU4: Core temperature/speed normal\\n[70524.569177] mce: CPU2: Package temperature/speed normal\\n[70524.569178] mce: CPU6: Package temperature/speed normal\\n[70524.569179] mce: CPU0: Package temperature/speed normal\\n[70524.569180] mce: CPU4: Package temperature/speed normal\\n[70524.569212] mce: CPU3: Package temperature/speed normal\\n[70524.569213] mce: CPU7: Package temperature/speed normal\\n[70524.569260] mce: CPU5: Package temperature/speed normal\\n[70524.569260] mce: CPU1: Package temperature/speed normal\\n[71113.231818] mce: CPU0: Core temperature above threshold, cpu clock throttled (total events = 11205)\\n[71113.231818] mce: CPU4: Core temperature above threshold, cpu clock throttled (total events = 11205)\\n[71113.231822] mce: CPU0: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231823] mce: CPU4: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231916] mce: CPU3: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231926] mce: CPU2: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231932] mce: CPU7: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231934] mce: CPU1: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231935] mce: CPU6: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.231936] mce: CPU5: Package temperature above threshold, cpu clock throttled (total events = 57767)\\n[71113.232910] mce: CPU0: Core temperature/speed normal\\n[71113.232910] mce: CPU4: Core temperature/speed normal\\n[71113.232912] mce: CPU0: Package temperature/speed normal\\n[71113.232913] mce: CPU4: Package temperature/speed normal\\n[71113.233007] mce: CPU6: Package temperature/speed normal\\n[71113.233014] mce: CPU1: Package temperature/speed normal\\n[71113.233022] mce: CPU3: Package temperature/speed normal\\n[71113.233028] mce: CPU5: Package temperature/speed normal\\n[71113.233029] mce: CPU7: Package temperature/speed normal\\n[71113.233030] mce: CPU2: Package temperature/speed normal\\n\\n##########################################################################\\n\\nLinux 5.4.0-137-generic (supernoserver) \\t02/07/23 \\t_x86_64_\\t(8 CPU)\\n\\navg-cpu:  %user   %nice %system %iowait  %steal   %idle\\n           0.74    0.00    0.02    0.07    0.00   99.16\\n\\nDevice             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd\\nnvme0n1          27.47       895.71        24.55         0.00   63703761    1746373          0\\n\\n              total        used        free      shared  buff/cache   available\\nMem:          7.5Gi       361Mi       7.0Gi       1.0Mi       187Mi       6.9Gi\\nSwap:         4.0Gi       0.0Ki       4.0Gi\\n\\nFilename\\t\\t\\t\\tType\\t\\tSize\\tUsed\\tPriority\\n/swap.img                              \\tfile    \\t4194300\\t512\\t-2\\n\\nCPU sysfs topology (clusters, cpufreq members, clockspeeds)\\n                 cpufreq   min    max\\n CPU    cluster  policy   speed  speed   core type\\n  0        0        0      400    4700   i7-1165G7 @ 2.80GHz\\n  1        0        1      400    4700   i7-1165G7 @ 2.80GHz\\n  2        0        2      400    4700   i7-1165G7 @ 2.80GHz\\n  3        0        3      400    4700   i7-1165G7 @ 2.80GHz\\n  4        0        4      400    4700   i7-1165G7 @ 2.80GHz\\n  5        0        5      400    4700   i7-1165G7 @ 2.80GHz\\n  6        0        6      400    4700   i7-1165G7 @ 2.80GHz\\n  7        0        7      400    4700   i7-1165G7 @ 2.80GHz\\n\\nArchitecture:                    x86_64\\nCPU op-mode(s):                  32-bit, 64-bit\\nByte Order:                      Little Endian\\nAddress sizes:                   39 bits physical, 48 bits virtual\\nCPU(s):                          8\\nOn-line CPU(s) list:             0-7\\nThread(s) per core:              2\\nCore(s) per socket:              4\\nSocket(s):                       1\\nNUMA node(s):                    1\\nVendor ID:                       GenuineIntel\\nCPU family:                      6\\nModel:                           140\\nModel name:                      11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz\\nStepping:                        1\\nCPU MHz:                         3891.986\\nCPU max MHz:                     4700.0000\\nCPU min MHz:                     400.0000\\nBogoMIPS:                        5606.40\\nVirtualization:                  VT-x\\nL1d cache:                       192 KiB\\nL1i cache:                       128 KiB\\nL2 cache:                        5 MiB\\nL3 cache:                        12 MiB\\nNUMA node0 CPU(s):               0-7\\nVulnerability Itlb multihit:     Not affected\\nVulnerability L1tf:              Not affected\\nVulnerability Mds:               Not affected\\nVulnerability Meltdown:          Not affected\\nVulnerability Mmio stale data:   Not affected\\nVulnerability Retbleed:          Not affected\\nVulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via prctl and seccomp\\nVulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user pointer sanitization\\nVulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB filling, PBRSB-eIBRS SW sequence\\nVulnerability Srbds:             Not affected\\nVulnerability Tsx async abort:   Not affected\\nFlags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault epb cat_l2 invpcid_single cdp_l2 ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid rdt_a avx512f avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp hwp_notify hwp_act_window hwp_epp hwp_pkg_req avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid movdiri movdir64b avx512_vp2intersect md_clear flush_l1d arch_capabilities\\n\\nProcessor Information\\n\\tSocket Designation: U3E1\\n\\tType: Central Processor\\n\\tFamily: Core i7\\n\\tManufacturer: Intel(R) Corporation\\n\\tID: C1 06 08 00 FF FB EB BF\\n\\tSignature: Type 0, Family 6, Model 140, Stepping 1\\n\\tFlags:\\n\\t\\tFPU (Floating-point unit on-chip)\\n\\t\\tVME (Virtual mode extension)\\n\\t\\tDE (Debugging extension)\\n\\t\\tPSE (Page size extension)\\n\\t\\tTSC (Time stamp counter)\\n\\t\\tMSR (Model specific registers)\\n\\t\\tPAE (Physical address extension)\\n\\t\\tMCE (Machine check exception)\\n\\t\\tCX8 (CMPXCHG8 instruction supported)\\n\\t\\tAPIC (On-chip APIC hardware supported)\\n\\t\\tSEP (Fast system call)\\n\\t\\tMTRR (Memory type range registers)\\n\\t\\tPGE (Page global enable)\\n\\t\\tMCA (Machine check architecture)\\n\\t\\tCMOV (Conditional move instruction supported)\\n\\t\\tPAT (Page attribute table)\\n\\t\\tPSE-36 (36-bit page size extension)\\n\\t\\tCLFSH (CLFLUSH instruction supported)\\n\\t\\tDS (Debug store)\\n\\t\\tACPI (ACPI supported)\\n\\t\\tMMX (MMX technology supported)\\n\\t\\tFXSR (FXSAVE and FXSTOR instructions supported)\\n\\t\\tSSE (Streaming SIMD extensions)\\n\\t\\tSSE2 (Streaming SIMD extensions 2)\\n\\t\\tSS (Self-snoop)\\n\\t\\tHTT (Multi-threading)\\n\\t\\tTM (Thermal monitor supported)\\n\\t\\tPBE (Pending break enabled)\\n\\tVersion: 11th Gen Intel(R) Core(TM) i7-1165G7 @ 2.80GHz\\n\\tVoltage: 0.8 V\\n\\tExternal Clock: 100 MHz\\n\\tMax Speed: 4700 MHz\\n\\tCurrent Speed: 2800 MHz\\n\\tStatus: Populated, Enabled\\n\\tUpgrade: Other\\n\\tL1 Cache Handle: 0x004B\\n\\tL2 Cache Handle: 0x004C\\n\\tL3 Cache Handle: 0x004D\\n\\tCore Count: 4\\n\\tCore Enabled: 4\\n\\tThread Count: 8\\n\\tCharacteristics:\\n\\t\\t64-bit capable\\n\\t\\tMulti-Core\\n\\t\\tHardware Thread\\n\\t\\tExecute Protection\\n\\t\\tEnhanced Virtualization\\n\\t\\tPower/Performance Control\\n\\nSoC guess: \\n Compiler: /usr/bin/gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 / x86_64-linux-gnu\\n Userland: amd64\\n   Kernel: 5.4.0-137-generic/x86_64\\n           CONFIG_HZ=250\\n           CONFIG_HZ_250=y\\n           CONFIG_PREEMPT_NOTIFIERS=y\\n           CONFIG_PREEMPT_VOLUNTARY=y\\n           raid6: avx512x4 gen() 62227 MB/s\\n           raid6: avx512x4 xor() 32916 MB/s\\n           raid6: avx512x2 gen() 52365 MB/s\\n           raid6: avx512x2 xor() 30883 MB/s\\n           raid6: avx512x1 gen() 44596 MB/s\\n           raid6: avx512x1 xor() 26211 MB/s\\n           raid6: avx2x4   gen() 43069 MB/s\\n           raid6: avx2x4   xor() 25716 MB/s\\n           raid6: avx2x2   gen() 42878 MB/s\\n           raid6: avx2x2   xor() 28432 MB/s\\n           raid6: avx2x1   gen() 34988 MB/s\\n           raid6: avx2x1   xor() 21148 MB/s\\n           raid6: sse2x4   gen() 14615 MB/s\\n           raid6: sse2x4   xor()  8762 MB/s\\n           raid6: sse2x2   gen() 13838 MB/s\\n           raid6: sse2x2   xor()  8764 MB/s\\n           raid6: sse2x1   gen() 13056 MB/s\\n           raid6: sse2x1   xor()  7060 MB/s\\n           raid6: using algorithm avx512x4 gen() 62227 MB/s\\n           raid6: .... xor() 32916 MB/s, rmw enabled\\n           raid6: using avx512x2 recovery algorithm\\n           xor: automatically using best checksumming function   avx       \\n\\n##########################################################################\\n\\nDIMM configuration:\\n          description: SODIMM DDR4 Synchronous 2667 MHz (0.4 ns)\\n          product: HMA81GS6CJR8N-VK\\n          vendor: SK Hynix\\n          physical id: 0\\n          configured speed: 2667MT/s\\n          size: 8GiB\\n          width: 64 bits\\n          clock: 2667MHz (0.4ns)\\n\\n|  / i7-1165G7 @ 2.80GHz | ~4520 | 5.4 | Ubuntu 20.04.5 LTS x86_64/amd64 | 20420 | 4702 | 1501600 | 9890 | 19780 | 71.53 |\\n```\\n\\n## Additional information\\n\\n:::info\\n\\n* [AliExpress SKU](https://m.aliexpress.ru/item/1005004325322975.html?sku_id=12000028762257776)\\n\\n* [All in Boom! 6 \u7f51\u53e3 i225 2.5G \u5c0f\u4e3b\u673a\u4ece\u5f00\u7bb1\u5230\u5e72\u6d3b\uff0c\u591a\u56fe\u5206\u4eab\uff01](https://www.v2ex.com/t/857328)"},{"id":"disable-ipv6-networking-on-linux","metadata":{"permalink":"/blog/disable-ipv6-networking-on-linux","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-12-07-How-disable-ipv6.md","source":"@site/blog/2022-12-07-How-disable-ipv6.md","title":"How disable IPv6 networking on Linux","description":"sysctl","date":"2022-12-07T00:00:00.000Z","formattedDate":"December 7, 2022","tags":[{"label":"linux","permalink":"/blog/tags/linux"},{"label":"network","permalink":"/blog/tags/network"},{"label":"IPv6","permalink":"/blog/tags/i-pv-6"},{"label":"sysctl","permalink":"/blog/tags/sysctl"},{"label":"grub","permalink":"/blog/tags/grub"}],"readingTime":0.41,"hasTruncateMarker":true,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"disable-ipv6-networking-on-linux","title":"How disable IPv6 networking on Linux","authors":"IgorKha","tags":["linux","network","IPv6","sysctl","grub"]},"prevItem":{"title":"Benchmarks miniPC in fanless aluminum case","permalink":"/blog/benchmarks-miniPC-in-fanless-aluminum-case"},"nextItem":{"title":"Simple aarch64 emulation in Proxmox","permalink":"/blog/proxmox-qemu-aarch64"}},"content":"\x3c!--truncate--\x3e\\n## sysctl\\n\\n```bash\\nsudo sysctl -w net.ipv6.conf.all.disable_ipv6=1\\nsudo sysctl -w net.ipv6.conf.default.disable_ipv6=1\\nsudo sysctl -w net.ipv6.conf.lo.disable_ipv6=1\\nsudo sysctl -p\\n```\\n\\nor append the following lines to `/etc/sysctl.conf`\\n\\n```text title=\\"sudo nano /etc/sysctl.conf\\"\\nnet.ipv6.conf.all.disable_ipv6=1\\nnet.ipv6.conf.default.disable_ipv6=1\\nnet.ipv6.conf.lo.disable_ipv6=1\\n```\\n\\nand apply changes (or reboot)\\n\\n```bash\\nsudo sysctl -p\\n```\\n\\n## grub\\n\\nAdd the following param `ipv6.disable=1` to `/etc/default/grub`\\n\\n```text title=\\"sudo nano /etc/default/grub\\"\\nGRUB_CMDLINE_LINUX_DEFAULT=\\"quiet splash ipv6.disable=1\\"\\nGRUB_CMDLINE_LINUX=\\"ipv6.disable=1\\"\\n```\\n\\nand apply changes\\n\\n```bash\\nsudo update-grub\\n```\\n\\nApply grub changes in Arch Linux\\n\\n```bash\\nsudo grub-mkconfig -o /boot/grub/grub.cfg\\n```"},{"id":"proxmox-qemu-aarch64","metadata":{"permalink":"/blog/proxmox-qemu-aarch64","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-12-07-qemu-aarch64/index.md","source":"@site/blog/2022-12-07-qemu-aarch64/index.md","title":"Simple aarch64 emulation in Proxmox","description":"Simple aarch64 emulation in Proxmox","date":"2022-12-07T00:00:00.000Z","formattedDate":"December 7, 2022","tags":[{"label":"qemu","permalink":"/blog/tags/qemu"},{"label":"proxmox","permalink":"/blog/tags/proxmox"},{"label":"linux","permalink":"/blog/tags/linux"},{"label":"debian","permalink":"/blog/tags/debian"},{"label":"aarch64","permalink":"/blog/tags/aarch-64"}],"readingTime":0.25,"hasTruncateMarker":true,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"proxmox-qemu-aarch64","title":"Simple aarch64 emulation in Proxmox","authors":"IgorKha","tags":["qemu","proxmox","linux","debian","aarch64"]},"prevItem":{"title":"How disable IPv6 networking on Linux","permalink":"/blog/disable-ipv6-networking-on-linux"},"nextItem":{"title":"Arch Linux with U2F","permalink":"/blog/arch-linux-with-u2f"}},"content":"![Simple aarch64 emulation in Proxmox](./qemuarm64.png)\\n\\n\x3c!--truncate--\x3e\\n\\n```text title=\\"nano /etc/pve/qemu-server/124.conf\\"\\n// highlight-yellow\\n#vmgenid%3A 0e34fef6-0336-4748-86f8-314346f2d087\\n// highlight-green\\narch: aarch64\\nbios: ovmf\\nboot: order=scsi2;scsi0;net0\\ncores: 4\\nmemory: 2048\\nmeta: creation-qemu=7.1.0,ctime=1670353758\\nname: arm\\nnet0: e1000=0A:57:71:2D:2C:88,bridge=vmbr0,firewall=1\\nnuma: 0\\nostype: l26\\nscsi0: raid:124/vm-124-disk-0.qcow2,size=32G\\nscsi2: raid:iso/debian-11.5.0-arm64-netinst.iso,media=cdrom,size=329004K\\nscsihw: virtio-scsi-pci\\nserial0: socket\\nsmbios1: uuid=998276ea-30eb-4bd1-b255-e9691ee5a96e\\nsockets: 1\\nvga: serial0\\n```"},{"id":"arch-linux-with-u2f","metadata":{"permalink":"/blog/arch-linux-with-u2f","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-11-26-Arch-Linux-with-Yubico-U2F/index.md","source":"@site/blog/2022-11-26-Arch-Linux-with-Yubico-U2F/index.md","title":"Arch Linux with U2F","description":"Linux-u2f.png","date":"2022-11-26T00:00:00.000Z","formattedDate":"November 26, 2022","tags":[{"label":"security","permalink":"/blog/tags/security"},{"label":"key","permalink":"/blog/tags/key"},{"label":"yubico","permalink":"/blog/tags/yubico"},{"label":"solokeys","permalink":"/blog/tags/solokeys"},{"label":"U2F","permalink":"/blog/tags/u-2-f"},{"label":"FIDO2","permalink":"/blog/tags/fido-2"},{"label":"arch","permalink":"/blog/tags/arch"},{"label":"linux","permalink":"/blog/tags/linux"},{"label":"pam","permalink":"/blog/tags/pam"},{"label":"sddm","permalink":"/blog/tags/sddm"},{"label":"ssh","permalink":"/blog/tags/ssh"}],"readingTime":7.52,"hasTruncateMarker":true,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"arch-linux-with-u2f","title":"Arch Linux with U2F","authors":"IgorKha","tags":["security","key","yubico","solokeys","U2F","FIDO2","arch","linux","pam","sddm","ssh"]},"prevItem":{"title":"Simple aarch64 emulation in Proxmox","permalink":"/blog/proxmox-qemu-aarch64"},"nextItem":{"title":"Bandwidth ZeroTier on NXP LS1046","permalink":"/blog/Bandwidth-ZeroTier-on-NXP-LS1046"}},"content":"![Linux-u2f.png](./Linux-u2f.png)\\n\\nThis method will work with ANY security keys that support the U2F standard\\n\\n\x3c!--truncate--\x3e\\n\\n## Prerequisites\\n\\n* A Security key supporting the U2F Standard\\n* Linux\\n* root access to the System you are gonna configure 2FA for\\n\\n## Installation the pam-u2f\\n\\n### Arch Linux\\n\\n```bash\\nsudo pacman -Sy --needed pam-u2f\\n```\\n\\n### Debian/Ubuntu\\n\\n```bash\\nsudo apt update && sudo apt install libpam-u2f\\n```\\n\\n### Source code\\n\\n[![github](https://img.shields.io/badge/Github-Yubico/pam--u2f-black?logo=github)](https://github.com/Yubico/pam-u2f)\\n\\n![GitHub Repo stars](https://img.shields.io/github/stars/yubico/pam-u2f?color=yellow&logo=github)\\n\\n![GitHub last commit](https://img.shields.io/github/last-commit/Yubico/pam-u2f?logo=github)\\n\\n## Configure Security keys\\n\\nThe `pam-u2f` package provides a handy tool to configure Security Keys for our users called `pamu2fcfg`\\n\\n```text  title=\\"$ pamu2fcfg --help\\"\\nUsage: pamu2fcfg [OPTION]...\\nPerform a FIDO2/U2F registration operation and print a configuration line that\\ncan be used with the pam_u2f module.\\n\\n  -h, --help               Print help and exit\\n      --version            Print version and exit\\n  -o, --origin=STRING      Relying party ID to use during registration,\\n                             defaults to pam://hostname\\n  -i, --appid=STRING       Relying party name to use during registration,\\n                             defaults to the value of origin\\n  -t, --type=STRING        COSE type to use during registration (ES256, EDDSA,\\n                             or RS256), defaults to ES256\\n  -r, --resident           Generate a resident (discoverable) credential\\n  -P, --no-user-presence   Allow the credential to be used without ensuring the\\n                             user\'s presence\\n  -N, --pin-verification   Require PIN verification during authentication\\n  -V, --user-verification  Require user verification during authentication\\n  -d, --debug              Print debug information\\n  -v, --verbose            Print information about chosen origin and appid\\n  -u, --username=STRING    The name of the user registering the device,\\n                             defaults to the current user name\\n  -n, --nouser             Print only registration information (key handle,\\n                             public key, and options), useful for appending\\n\\nReport bugs at <https://github.com/Yubico/pam-u2f/issues>.\\n```\\n\\n### Individual Authorization Mapping by User\\n\\n1. Create folder:\\n\\n    ```bash\\n    mkdir -p ~/.config/Yubico\\n    ```\\n\\n2. Make user keys:\\n\\n    ```bash\\n    pamu2fcfg > ~/.config/Yubico/u2f_keys\\n    ```\\n\\n    2.1 Add Additional keys using\\n\\n    ```bash\\n    pamu2fcfg >> ~/.config/Yubico/u2f_keys\\n    ```\\n\\n*pamu2fcfg example output:*\\n\\n ```text title=\\"/home/user/.config/Yubico/u2f_keys\\"\\n username:1pQTIDIGWLfyRhYjiFpJeSlSxN4fqdY0ucl59VxQdS0qV9QxDgb5HGL1Hd18o1gQ1wr9B3BP60tk4735JrIE7A==,KPMgCkrhND9yMKaImqwgywBVJlIHc8rDUVbMirXCG70X+bzld/a6HWOjaSlzUXinVp3yfofx96wgmSWkGX6poQ==,es256,+presence\\n ```\\n\\n### Central Authorization Mapping\\n\\nCreate a file e.g. `/etc/u2f_mappings`. The file must contain a user name, and the information obtained during the registration procedure.\\n\\n```bash\\npamu2fcfg -u username1 >> /etc/u2f_mappings\\n```\\n\\n## Activate the pam_u2f.so module in PAM\\n\\nConfigure pam-u2f as a `required` module after your primary authentication module(s) for use as a second factor. Make sure that the primary authentication method is not `sufficient` or uses other control values that may preempt execution of pam-u2f.\\n\\n### Dealing with SDDM\\n\\n1. For correctly work SDDM with U2F, need to change `system-login` to `system-local-login` into `/etc/pam.d/sddm` Failing to do this will result in the KDE lock screen, and terminal access requiring U2F, but the initial login via SDDM bypassing U2F, which defeats the purpose of having two factor authentication.\\n2. Add the following line to config file (change `username`)\\n\\n    `auth            required        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys`\\n\\nsddm config **before** adding U2F:\\n\\n```text title=\\"/etc/pam.d/sddm\\" showLineNumbers\\n#%PAM-1.0\\n\\n// highlight-red\\nauth           include         system-login\\n-auth           optional        pam_gnome_keyring.so\\n-auth   optional  pam_kwallet5.so\\n\\naccount         include         system-login\\n\\npassword        include         system-login\\n-password       optional        pam_gnome_keyring.so use_authtok\\n\\nsession         optional        pam_keyinit.so force revoke\\nsession         include         system-login\\n-session                optional        pam_gnome_keyring.so auto_start\\n-session  optional  pam_kwallet5.so auto_start\\n```\\n\\nsddm config **after** adding U2F:\\n\\n```text title=\\"/etc/pam.d/sddm\\" showLineNumbers\\n#%PAM-1.0\\n\\n// highlight-green\\nauth            include         system-local-login\\n-auth           optional        pam_gnome_keyring.so\\n-auth   optional  pam_kwallet5.so\\n// highlight-green\\nauth            required        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys\\n\\naccount         include         system-login\\n\\npassword        include         system-login\\n-password       optional        pam_gnome_keyring.so use_authtok\\n\\nsession         optional        pam_keyinit.so force revoke\\nsession         include         system-login\\n-session                optional        pam_gnome_keyring.so auto_start\\n-session  optional  pam_kwallet5.so auto_start\\n```\\n\\n:::tip\\n\\nAdd the same version to the top of `/etc/pam.d/kde` to protect the KDE Plasma lock screen.\\n\\n`auth            required        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys`\\n\\n:::\\n\\n:::info PAM Configuration (Reference)\\n\\n<details>\\n  <summary>PAM Configuration File Syntax</summary>\\n\\nThe entries in the configuration file are in the format:\\n\\n**`service-name module-type control-flag module-path module-options`**\\n\\n---\\n\\n**service-name** - Name of the service, for example, `ftp`, `login`, or `passwd`. An application can use different service names for the services that the application provides. For example, the Solaris secure shell daemon uses these service names: `sshd-none`, `sshd-password`, `sshd-kbdint`, `sshd-pubkey`, and `sshd-hostbased`. The service-name other is a predefined name that is used as a wildcard service-name. If a particular service-name is not found in the configuration file, the configuration for other is used.\\n\\n**module-type** - The type of service, that is, auth, account, session, or password.\\n\\n**control-flag** - Indicates the role of the module in determining the integrated success or failure value for the service. Valid control flags are binding, include, optional, required, requisite, and sufficient. See below how PAM Stacking Works for information on the use of these flags.\\n\\n**module-path** - The path to the library object that implements the service. If the pathname is not absolute, the pathname is assumed to be relative to `/usr/lib/security/$ISA/`. Use the architecture-dependent macro $ISA to cause `libpam` to look in the directory for the particular architecture of the application.\\n\\n**module-options** - Options that are passed to the service modules. A module\'s man page describes the options that are accepted by that module. Typical module options include `nowarn` and `debug`.\\n</details>\\n\\n<details>\\n  <summary>How PAM Stacking Works</summary>\\n\\nThe control flag indicates the role that a PAM module plays in determining access to the service. The control flags and their effects are:\\n\\n**Binding** \u2013 Success in meeting a binding module\'s requirements returns success immediately to the application if no previous required modules have failed. If these conditions are met, then no further execution of modules occurs. Failure causes a required failure to be recorded and the processing of modules to be continued.\\n\\n**Include** \u2013 Adds lines from a separate PAM configuration file to be used at this point in the PAM stack. This flag does not control success or failure behaviors. When a new file is read, the PAM include stack is incremented. When the stack check in the new file finishes, the include stack value is decremented. When the end of a file is reached and the PAM include stack is 0, then the stack processing ends. The maximum number for the PAM include stack is 32.\\n\\n**Optional** \u2013 Success in meeting an optional module\'s requirements is not necessary for using the service. Failure causes an optional failure to be recorded.\\n\\n**Required** \u2013 Success in meeting a required module\'s requirements is necessary for using the service. Failure results in an error return after the remaining modules for this service have been executed. Final success for the service is returned only if no binding or required modules have reported failures.\\n\\n**Requisite** \u2013 Success in meeting a requisite module\'s requirements is necessary for using the service. Failure results in an immediate error return with no further execution of modules. All requisite modules for a service must return success for the function to be able to return success to the application.\\n\\n**Sufficient** \u2013 If no previous required failures have occurred, success in a sufficient module returns success to the application immediately with no further execution of modules. Failure causes an optional failure to be recorded.\\n\\nThe following two diagrams shows how access is determined in the integration process. The first diagram indicates how success or failure is recorded for each type of control flag. The second diagram shows how the integrated value is determined.\\n\\n***Effect of Control Flags***\\n\\n![img](./pam.run_stack1.png)\\n\\n***How Integrated Value Is Determined***\\n\\n![img](./pam.run_stack2.png)\\n</details>\\n\\n:::\\n\\n### Passwordless sudo with U2F\\n\\nYou can use U2F key for Passwordless sudo i.e only the U2f key would be needed to run sudo commands\\n\\nWe can achieve this by editing the `/etc/pam.d/sudo` file\\n\\nAdd the following line to the TOP of the sudo file\\n\\n`auth            sufficient        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys cue [cue_prompt=<Prompt we want to show to our users>]`\\n\\nExample:\\n\\n```text title=\\"/etc/pam.d/sudo\\"\\n#%PAM-1.0\\n// highlight-next-line\\nauth            sufficient      pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys cue [cue_prompt=Please Confirm Your Identity.]\\nauth            include         system-auth\\naccount         include         system-auth\\nsession         include         system-auth\\n\\n```\\n\\n## SSH Credentials\\n\\nFirst need to make sure the client has [OpenSSH 8.2](https://www.openssh.com/txt/release-8.2) or higher installed:\\n\\n```bash\\n$ ssh -V\\nOpenSSH_9.1p1, OpenSSL 3.0.7 1 Nov 2022\\n```\\n\\nTo generate a new SSH key pair, which can be either `ecdsa-sk` or `ed25519-sk` key pair. The `-sk` extension stands for **security key**. Please note that the `ed25519-sk` key pair is only supported by new YubiKeys with firmware 5.2.3 or higher that supports FIDO2. This means that YubiKeys with firmware below 5.2.3 are only compatible with ecdsa-sk key pairs. If possible, generate an `ed25519-sk` SSH key pair for [this reason](https://www.cryptsus.com/blog/how-to-secure-your-ssh-server-with-public-key-elliptic-curve-ed25519-crypto.html).\\n\\n:::tip\\n\\nYou can check the YubiKey firmware* version with the following command.\\n\\n```bash\\nlsusb -v 2>/dev/null | grep -A2 Yubico | grep \\"bcdDevice\\" | awk \'{print $2}\'\\n```\\n\\nOr we can use  [YubiKey Manager](#additional-information)\\n\\n![YubiKey Manager AppImage](yubikey-appimage.png)\\n\\n***\\\\*Yubico does not allow its firmware to be modified to minimize the physical attack surface.***\\n\\n:::\\n\\nIt is then possible to generate a credential file with:\\n\\n```bash\\nssh-keygen -t ed25519-sk -C \\"$(hostname)-Yubikey\\"\\n```\\n\\n![ssh-keygen](ssh-keygen-ed25519-sk.png)\\n\\n![ssh-keys](ssh-keys.png)\\n\\nAdd your new public key to the remote host\\n\\n```bash\\nssh-copy-id -i ~/.ssh/id_ed25519_sk.pub user@192.168.1.1\\n```\\n\\nUse:\\n\\n```bash\\nssh -i ~/.ssh/id_ed25519_sk user@192.168.1.1\\n```\\n\\n## Additional information\\n\\n:::info\\n\\n* [YubiKey Manager AppImage](https://developers.yubico.com/yubikey-manager-qt/Releases/yubikey-manager-qt-latest-linux.AppImage)\\n* [SoloKeys (open-source hardware and firmware) as an alternative to YubiKeys (closed source)](https://solokeys.com/)\\n* [pam-u2f](https://github.com/Yubico/pam-u2f)\\n* [PAM base-stack in Arch Linux](https://wiki.archlinux.org/title/PAM#PAM_base-stack)\\n* [Linux user authentication with PAM](https://wiki.archlinux.org/title/YubiKey#Linux_user_authentication_with_PAM)\\n* [More information for module arguments](https://github.com/Yubico/pam-u2f#module-arguments)\\n* [YubiKey Full Disk Encryption](https://github.com/agherzan/yubikey-full-disk-encryption)\\n* [Installing Yubico Software on Linux](https://support.yubico.com/hc/en-us/articles/360016649039-Installing-Yubico-Software-on-Linux)\\n* [Using Your U2F YubiKey with Linux](https://support.yubico.com/hc/en-us/articles/360013708900-Using-Your-U2F-YubiKey-with-Linux)\\n* [Yubico Support](https://support.yubico.com/)\\n\\n:::"},{"id":"Bandwidth-ZeroTier-on-NXP-LS1046","metadata":{"permalink":"/blog/Bandwidth-ZeroTier-on-NXP-LS1046","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx","source":"@site/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx","title":"Bandwidth ZeroTier on NXP LS1046","description":"Devices","date":"2022-04-27T00:00:00.000Z","formattedDate":"April 27, 2022","tags":[{"label":"test","permalink":"/blog/tags/test"},{"label":"zerotier","permalink":"/blog/tags/zerotier"},{"label":"nxp","permalink":"/blog/tags/nxp"}],"readingTime":2.8,"hasTruncateMarker":true,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"Bandwidth-ZeroTier-on-NXP-LS1046","title":"Bandwidth ZeroTier on NXP LS1046","authors":"IgorKha","tags":["test","zerotier","nxp"]},"prevItem":{"title":"Arch Linux with U2F","permalink":"/blog/arch-linux-with-u2f"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\nimport CodeBlock from \'@theme/CodeBlock\';\\n\\n## Devices\\n\\n| **Device**          | **OS**           | **kernel** | **link** | **ZeroTier ver.** |\\n|:-------------------:|:----------------:|:----------:|:--------:|:-----------------:|\\n| [NXP LS1046A-RDB](https://www.nxp.com/design/qoriq-developer-resources/layerscape-ls1046a-reference-design-board:LS1046A-RDB)     | OpenWRT 21.02.02 | 5.4.179    | 10Gbps   | **1.6.6**         |\\n| [NXP LS1046A Forlinx](https://www.forlinx.net/product/ls1046a-single-board-computer-22.html) | OpenWRT 21.02.02 | 5.4.179    | 10Gbps   | **1.6.6**         |\\n\\n\x3c!--truncate--\x3e\\n\\n## ZeroTier Flow Rules\\n\\n```text title=\\"default zt flow rules\\"\\ndrop\\n    not ethertype ipv4\\n    and not ethertype arp\\n    and not ethertype ipv6\\n;\\naccept;\\n```\\n\\n## Result\\n\\n<Tabs>\\n  <TabItem value=\\"parallel-1\\" label=\\"iperf 1 thread\\" default>\\n    <CodeBlock language=\\"text\\" title=\\"iperf -c 172.22.36.168 -t 30\\">\\n      {`------------------------------------------------------------\\nClient connecting to 172.22.36.168, TCP port 5001\\nTCP window size:  238 KByte (default)\\n------------------------------------------------------------\\n[  3] local 172.22.117.147 port 38266 connected with 172.22.36.168 port 5001\\n[ ID] Interval       Transfer     Bandwidth\\n[  3]  0.0-30.0 sec  1.47 GBytes   421 Mbits/sec`}\\n    </CodeBlock>\\n  </TabItem>\\n  <TabItem value=\\"parallel-20\\" label=\\"iperf 20 threads\\">\\n    <CodeBlock language=\\"text\\" title=\\"iperf -c 172.22.36.168 -P 20 -t 60\\">\\n      {`------------------------------------------------------------\\nClient connecting to 172.22.36.168, TCP port 5001\\nTCP window size: 2.45 MByte (default)\\n------------------------------------------------------------\\n[ 19] local 172.22.117.147 port 44320 connected with 172.22.36.168 port 5001\\n[  3] local 172.22.117.147 port 44288 connected with 172.22.36.168 port 5001\\n[  5] local 172.22.117.147 port 44292 connected with 172.22.36.168 port 5001\\n[ 10] local 172.22.117.147 port 44302 connected with 172.22.36.168 port 5001\\n[  4] local 172.22.117.147 port 44290 connected with 172.22.36.168 port 5001\\n[  6] local 172.22.117.147 port 44294 connected with 172.22.36.168 port 5001\\n[  9] local 172.22.117.147 port 44300 connected with 172.22.36.168 port 5001\\n[ 17] local 172.22.117.147 port 44316 connected with 172.22.36.168 port 5001\\n[ 13] local 172.22.117.147 port 44308 connected with 172.22.36.168 port 5001\\n[  8] local 172.22.117.147 port 44298 connected with 172.22.36.168 port 5001\\n[ 18] local 172.22.117.147 port 44318 connected with 172.22.36.168 port 5001\\n[ 14] local 172.22.117.147 port 44310 connected with 172.22.36.168 port 5001\\n[ 21] local 172.22.117.147 port 44324 connected with 172.22.36.168 port 5001\\n[  7] local 172.22.117.147 port 44296 connected with 172.22.36.168 port 5001\\n[ 20] local 172.22.117.147 port 44322 connected with 172.22.36.168 port 5001\\n[ 12] local 172.22.117.147 port 44306 connected with 172.22.36.168 port 5001\\n[ 11] local 172.22.117.147 port 44304 connected with 172.22.36.168 port 5001\\n[ 16] local 172.22.117.147 port 44314 connected with 172.22.36.168 port 5001\\n[ 22] local 172.22.117.147 port 44326 connected with 172.22.36.168 port 5001\\n[ 15] local 172.22.117.147 port 44312 connected with 172.22.36.168 port 5001\\n[ ID] Interval       Transfer     Bandwidth\\n[  4]  0.0-60.0 sec   153 MBytes  21.3 Mbits/sec\\n[  8]  0.0-60.0 sec   165 MBytes  23.1 Mbits/sec\\n[ 18]  0.0-60.0 sec   164 MBytes  23.0 Mbits/sec\\n[  7]  0.0-60.0 sec   167 MBytes  23.3 Mbits/sec\\n[ 11]  0.0-60.0 sec   180 MBytes  25.2 Mbits/sec\\n[ 19]  0.0-60.1 sec   135 MBytes  18.8 Mbits/sec\\n[ 20]  0.0-60.1 sec   148 MBytes  20.6 Mbits/sec\\n[ 15]  0.0-60.1 sec   207 MBytes  28.9 Mbits/sec\\n[ 22]  0.0-60.2 sec   204 MBytes  28.5 Mbits/sec\\n[ 17]  0.0-60.2 sec   145 MBytes  20.2 Mbits/sec\\n[  5]  0.0-60.3 sec   141 MBytes  19.6 Mbits/sec\\n[ 14]  0.0-60.3 sec   148 MBytes  20.7 Mbits/sec\\n[ 12]  0.0-60.3 sec   174 MBytes  24.2 Mbits/sec\\n[ 16]  0.0-60.3 sec   145 MBytes  20.2 Mbits/sec\\n[ 21]  0.0-60.3 sec   160 MBytes  22.3 Mbits/sec\\n[ 10]  0.0-60.4 sec   195 MBytes  27.1 Mbits/sec\\n[  6]  0.0-60.4 sec   192 MBytes  26.6 Mbits/sec\\n[  9]  0.0-60.7 sec   104 MBytes  14.3 Mbits/sec\\n[ 13]  0.0-60.9 sec   149 MBytes  20.6 Mbits/sec\\n[  3]  0.0-61.0 sec   142 MBytes  19.6 Mbits/sec\\n[SUM]  0.0-61.0 sec  3.14 GBytes   443 Mbits/sec`}\\n    </CodeBlock>\\n  </TabItem>\\n</Tabs>"}]}')}}]);