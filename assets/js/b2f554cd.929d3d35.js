"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"Arch Linux with Yubico U2F","metadata":{"permalink":"/blog/Arch Linux with Yubico U2F","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-11-26-Arch-Linux-with-Yubico-U2F.md","source":"@site/blog/2022-11-26-Arch-Linux-with-Yubico-U2F.md","title":"Arch Linux with Yubico U2F","description":"Prerequisites","date":"2022-11-26T00:00:00.000Z","formattedDate":"November 26, 2022","tags":[{"label":"security","permalink":"/blog/tags/security"},{"label":"key","permalink":"/blog/tags/key"},{"label":"yubico","permalink":"/blog/tags/yubico"},{"label":"U2F","permalink":"/blog/tags/u-2-f"},{"label":"FIDO2","permalink":"/blog/tags/fido-2"},{"label":"arch","permalink":"/blog/tags/arch"},{"label":"linux","permalink":"/blog/tags/linux"},{"label":"pam","permalink":"/blog/tags/pam"},{"label":"sddm","permalink":"/blog/tags/sddm"},{"label":"ssh","permalink":"/blog/tags/ssh"}],"readingTime":2.47,"hasTruncateMarker":false,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"Arch Linux with Yubico U2F","title":"Arch Linux with Yubico U2F","authors":"IgorKha","tags":["security","key","yubico","U2F","FIDO2","arch","linux","pam","sddm","ssh"]},"nextItem":{"title":"Bandwidth ZeroTier on NXP LS1046","permalink":"/blog/Bandwidth-ZeroTier-on-NXP-LS1046"}},"content":"## Prerequisites\\n\\nThis method will work with ANY security keys that support the U2F standard\\n\\n* A Security key supporting the U2F Standard\\n* Linux\\n* root access to the System you are gonna configure 2FA for\\n\\n## Installation the pam-u2f\\n\\n### Arch Linux\\n\\n`sudo pacman -Sy --needed pam-u2f`\\n\\n### Debian/Ubuntu\\n\\n`sudo apt update && sudo apt install libpam-u2f`\\n\\n### Source code\\n\\n[Github](https://github.com/Yubico/pam-u2f)\\n\\n## Configure Security keys\\n\\nThe `pam-u2f` package provides a handy tool to configure Security Keys for our users called `pamu2fcfg`\\n\\n### Individual Authorization Mapping by User\\n\\n1. Create folder:\\n\\n    `mkdir -p ~/.config/Yubico`\\n\\n2. Make user keys:\\n\\n    `pamu2fcfg > ~/.config/Yubico/u2f_keys`\\n\\n    2.1 Add Additional keys using\\n\\n    `pamu2fcfg >> ~/.config/Yubico/u2f_keys`\\n\\n>*pamu2fcfg example output:*\\n>`username:1pQTIDIGWLfyRhYjiFpJeSlSxN4fqdY0ucl59VxQdS0qV9QxDgb5HGL1Hd18o1gQ1wr9B3BP60tk4735JrIE7A==,KPMgCkrhND9yMKaImqwgywBVJlIHc8rDUVbMirXCG70X+bzld/a6HWOjaSlzUXinVp3yfofx96wgmSWkGX6poQ==,es256,+presence`\\n\\n### Central Authorization Mapping\\n\\nCreate a file e.g. `/etc/u2f_mappings`. The file must contain a user name, and the information obtained during the registration procedure.\\n\\n`pamu2fcfg -u username1 >> /etc/u2f_mappings`\\n\\n## Activate the pam_u2f.so module in PAM\\n\\nConfigure pam-u2f as a `required` module after your primary authentication module(s) for use as a second factor. Make sure that the primary authentication method is not `sufficient` or uses other control values that may preempt execution of pam-u2f.\\n\\n### Dealing with SDDM\\n\\n1. For correctly work SDDM with U2F, need to change `system-login` to `system-local-login` into `/etc/pam.d/sddm` Failing to do this will result in the KDE lock screen, and terminal access requiring U2F, but the initial login via SDDM bypassing U2F, which defeats the purpose of having two factor authentication.\\n2. Add the following line to config file (change `username`)\\n\\n    `auth            required        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys`\\n\\nsddm config **before** adding U2F:\\n\\n```text title=\\"/etc/pam.d/sddm\\"\\n#%PAM-1.0\\n\\nauth           include         system-login\\n-auth           optional        pam_gnome_keyring.so\\n-auth   optional  pam_kwallet5.so\\n\\naccount         include         system-login\\n\\npassword        include         system-login\\n-password       optional        pam_gnome_keyring.so use_authtok\\n\\nsession         optional        pam_keyinit.so force revoke\\nsession         include         system-login\\n-session                optional        pam_gnome_keyring.so auto_start\\n-session  optional  pam_kwallet5.so auto_start\\n```\\n\\nsddm config **after** adding U2F:\\n\\n```text title=\\"/etc/pam.d/sddm\\"\\n#%PAM-1.0\\n\\nauth            include         system-local-login\\n-auth           optional        pam_gnome_keyring.so\\n-auth   optional  pam_kwallet5.so\\nauth            required        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys\\n\\naccount         include         system-login\\n\\npassword        include         system-login\\n-password       optional        pam_gnome_keyring.so use_authtok\\n\\nsession         optional        pam_keyinit.so force revoke\\nsession         include         system-login\\n-session                optional        pam_gnome_keyring.so auto_start\\n-session  optional  pam_kwallet5.so auto_start\\n```\\n\\n### Passwordless sudo with U2F\\n\\nYou can use U2F key for Passwordless sudo i.e only the U2f key would be needed to run sudo commands\\n\\nWe can achieve this by editing the `/etc/pam.d/sudo` file\\n\\nAdd the following line to the TOP of the sudo file\\n\\n`auth            sufficient        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys cue [cue_prompt=<Prompt we want to show to our users>]`\\n\\nExample:\\n\\n```text title=\\"/etc/pam.d/sudo\\"\\n#%PAM-1.0\\nauth            sufficient        pam_u2f.so authfile=/home/<username>/.config/Yubico/u2f_keys cue [cue_prompt=Please Confirm Your Identity.]\\nauth            include         system-auth\\naccount         include         system-auth\\nsession         include         system-auth\\n\\n```\\n\\n## SSH Credentials\\n\\nTo generate SSH credentials OpenSSH version 8.2 or later is required. It is then possible to generate a credential file with:\\n\\n`ssh-keygen -t ecdsa-sk -f ./.ssh/filename`\\n\\nor\\n\\n`ssh-keygen -t ed25519-sk -f ./.ssh/filename`\\n\\n## Additional information\\n\\n* [YubiKey Manager AppImage](https://developers.yubico.com/yubikey-manager-qt/Releases/yubikey-manager-qt-latest-linux.AppImage)\\n* [pam-u2f](https://github.com/Yubico/pam-u2f)\\n* [PAM base-stack in Arch Linux](https://wiki.archlinux.org/title/PAM#PAM_base-stack)\\n* [Linux user authentication with PAM](https://wiki.archlinux.org/title/YubiKey#Linux_user_authentication_with_PAM)\\n* [More information for module arguments](https://github.com/Yubico/pam-u2f#module-arguments)\\n* [YubiKey Full Disk Encryption](https://github.com/agherzan/yubikey-full-disk-encryption)"},{"id":"Bandwidth-ZeroTier-on-NXP-LS1046","metadata":{"permalink":"/blog/Bandwidth-ZeroTier-on-NXP-LS1046","editUrl":"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx","source":"@site/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx","title":"Bandwidth ZeroTier on NXP LS1046","description":"Devices","date":"2022-04-27T00:00:00.000Z","formattedDate":"April 27, 2022","tags":[{"label":"test","permalink":"/blog/tags/test"},{"label":"zerotier","permalink":"/blog/tags/zerotier"},{"label":"nxp","permalink":"/blog/tags/nxp"}],"readingTime":2.8,"hasTruncateMarker":true,"authors":[{"name":"IgorKha","url":"https://github.com/IgorKha","imageURL":"https://github.com/IgorKha.png","key":"IgorKha"}],"frontMatter":{"slug":"Bandwidth-ZeroTier-on-NXP-LS1046","title":"Bandwidth ZeroTier on NXP LS1046","authors":"IgorKha","tags":["test","zerotier","nxp"]},"prevItem":{"title":"Arch Linux with Yubico U2F","permalink":"/blog/Arch Linux with Yubico U2F"}},"content":"import Tabs from \'@theme/Tabs\';\\nimport TabItem from \'@theme/TabItem\';\\nimport CodeBlock from \'@theme/CodeBlock\';\\n\\n## Devices\\n\\n| **Device**          | **OS**           | **kernel** | **link** | **ZeroTier ver.** |\\n|:-------------------:|:----------------:|:----------:|:--------:|:-----------------:|\\n| [NXP LS1046A-RDB](https://www.nxp.com/design/qoriq-developer-resources/layerscape-ls1046a-reference-design-board:LS1046A-RDB)     | OpenWRT 21.02.02 | 5.4.179    | 10Gbps   | **1.6.6**         |\\n| [NXP LS1046A Forlinx](https://www.forlinx.net/product/ls1046a-single-board-computer-22.html) | OpenWRT 21.02.02 | 5.4.179    | 10Gbps   | **1.6.6**         |\\n\\n\x3c!--truncate--\x3e\\n\\n## ZeroTier Flow Rules\\n\\n```text title=\\"default zt flow rules\\"\\ndrop\\n    not ethertype ipv4\\n    and not ethertype arp\\n    and not ethertype ipv6\\n;\\naccept;\\n```\\n\\n## Result\\n\\n<Tabs>\\n  <TabItem value=\\"parallel-1\\" label=\\"iperf 1 thread\\" default>\\n    <CodeBlock language=\\"text\\" title=\\"iperf -c 172.22.36.168 -t 30\\">\\n      {`------------------------------------------------------------\\nClient connecting to 172.22.36.168, TCP port 5001\\nTCP window size:  238 KByte (default)\\n------------------------------------------------------------\\n[  3] local 172.22.117.147 port 38266 connected with 172.22.36.168 port 5001\\n[ ID] Interval       Transfer     Bandwidth\\n[  3]  0.0-30.0 sec  1.47 GBytes   421 Mbits/sec`}\\n    </CodeBlock>\\n  </TabItem>\\n  <TabItem value=\\"parallel-20\\" label=\\"iperf 20 threads\\">\\n    <CodeBlock language=\\"text\\" title=\\"iperf -c 172.22.36.168 -P 20 -t 60\\">\\n      {`------------------------------------------------------------\\nClient connecting to 172.22.36.168, TCP port 5001\\nTCP window size: 2.45 MByte (default)\\n------------------------------------------------------------\\n[ 19] local 172.22.117.147 port 44320 connected with 172.22.36.168 port 5001\\n[  3] local 172.22.117.147 port 44288 connected with 172.22.36.168 port 5001\\n[  5] local 172.22.117.147 port 44292 connected with 172.22.36.168 port 5001\\n[ 10] local 172.22.117.147 port 44302 connected with 172.22.36.168 port 5001\\n[  4] local 172.22.117.147 port 44290 connected with 172.22.36.168 port 5001\\n[  6] local 172.22.117.147 port 44294 connected with 172.22.36.168 port 5001\\n[  9] local 172.22.117.147 port 44300 connected with 172.22.36.168 port 5001\\n[ 17] local 172.22.117.147 port 44316 connected with 172.22.36.168 port 5001\\n[ 13] local 172.22.117.147 port 44308 connected with 172.22.36.168 port 5001\\n[  8] local 172.22.117.147 port 44298 connected with 172.22.36.168 port 5001\\n[ 18] local 172.22.117.147 port 44318 connected with 172.22.36.168 port 5001\\n[ 14] local 172.22.117.147 port 44310 connected with 172.22.36.168 port 5001\\n[ 21] local 172.22.117.147 port 44324 connected with 172.22.36.168 port 5001\\n[  7] local 172.22.117.147 port 44296 connected with 172.22.36.168 port 5001\\n[ 20] local 172.22.117.147 port 44322 connected with 172.22.36.168 port 5001\\n[ 12] local 172.22.117.147 port 44306 connected with 172.22.36.168 port 5001\\n[ 11] local 172.22.117.147 port 44304 connected with 172.22.36.168 port 5001\\n[ 16] local 172.22.117.147 port 44314 connected with 172.22.36.168 port 5001\\n[ 22] local 172.22.117.147 port 44326 connected with 172.22.36.168 port 5001\\n[ 15] local 172.22.117.147 port 44312 connected with 172.22.36.168 port 5001\\n[ ID] Interval       Transfer     Bandwidth\\n[  4]  0.0-60.0 sec   153 MBytes  21.3 Mbits/sec\\n[  8]  0.0-60.0 sec   165 MBytes  23.1 Mbits/sec\\n[ 18]  0.0-60.0 sec   164 MBytes  23.0 Mbits/sec\\n[  7]  0.0-60.0 sec   167 MBytes  23.3 Mbits/sec\\n[ 11]  0.0-60.0 sec   180 MBytes  25.2 Mbits/sec\\n[ 19]  0.0-60.1 sec   135 MBytes  18.8 Mbits/sec\\n[ 20]  0.0-60.1 sec   148 MBytes  20.6 Mbits/sec\\n[ 15]  0.0-60.1 sec   207 MBytes  28.9 Mbits/sec\\n[ 22]  0.0-60.2 sec   204 MBytes  28.5 Mbits/sec\\n[ 17]  0.0-60.2 sec   145 MBytes  20.2 Mbits/sec\\n[  5]  0.0-60.3 sec   141 MBytes  19.6 Mbits/sec\\n[ 14]  0.0-60.3 sec   148 MBytes  20.7 Mbits/sec\\n[ 12]  0.0-60.3 sec   174 MBytes  24.2 Mbits/sec\\n[ 16]  0.0-60.3 sec   145 MBytes  20.2 Mbits/sec\\n[ 21]  0.0-60.3 sec   160 MBytes  22.3 Mbits/sec\\n[ 10]  0.0-60.4 sec   195 MBytes  27.1 Mbits/sec\\n[  6]  0.0-60.4 sec   192 MBytes  26.6 Mbits/sec\\n[  9]  0.0-60.7 sec   104 MBytes  14.3 Mbits/sec\\n[ 13]  0.0-60.9 sec   149 MBytes  20.6 Mbits/sec\\n[  3]  0.0-61.0 sec   142 MBytes  19.6 Mbits/sec\\n[SUM]  0.0-61.0 sec  3.14 GBytes   443 Mbits/sec`}\\n    </CodeBlock>\\n  </TabItem>\\n</Tabs>"}]}')}}]);