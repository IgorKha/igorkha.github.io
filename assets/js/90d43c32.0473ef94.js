"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4829],{5162:(e,t,n)=>{n.d(t,{Z:()=>l});var r=n(7294),a=n(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:n,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>h});var r=n(7462),a=n(7294),o=n(6010),l=n(2389),s=n(7392),i=n(7094),c=n(2466);const p="tabList__CuJ",d="tabItem_LNqP";function u(e){const{lazy:t,block:n,defaultValue:l,values:u,groupId:h,className:m}=e,b=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),g=u??b.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),k=(0,s.l)(g,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const w=null===l?l:l??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==w&&!g.some((e=>e.value===w)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${w}" but none of its children has the corresponding value. Available values are: ${g.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:y}=(0,i.U)(),[N,f]=(0,a.useState)(w),M=[],{blockElementScrollPositionUntilNextRender:T}=(0,c.o5)();if(null!=h){const e=v[h];null!=e&&e!==N&&g.some((t=>t.value===e))&&f(e)}const B=e=>{const t=e.currentTarget,n=M.indexOf(t),r=g[n].value;r!==N&&(T(t),f(r),null!=h&&y(h,String(r)))},Z=e=>{let t=null;switch(e.key){case"Enter":B(e);break;case"ArrowRight":{const n=M.indexOf(e.currentTarget)+1;t=M[n]??M[0];break}case"ArrowLeft":{const n=M.indexOf(e.currentTarget)-1;t=M[n]??M[M.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},m)},g.map((e=>{let{value:t,label:n,attributes:l}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>M.push(e),onKeyDown:Z,onClick:B},l,{className:(0,o.Z)("tabs__item",d,l?.className,{"tabs__item--active":N===t})}),n??t)}))),t?(0,a.cloneElement)(b.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function h(e){const t=(0,l.Z)();return a.createElement(u,(0,r.Z)({key:String(t)},e))}},8340:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>p,toc:()=>u});var r=n(7462),a=(n(7294),n(3905)),o=n(5488),l=n(5162),s=n(814);const i={slug:"Bandwidth-ZeroTier-on-NXP-LS1046",title:"Bandwidth ZeroTier on NXP LS1046",authors:"IgorKha",tags:["test","zerotier","nxp"]},c=void 0,p={permalink:"/blog/Bandwidth-ZeroTier-on-NXP-LS1046",editUrl:"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx",source:"@site/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx",title:"Bandwidth ZeroTier on NXP LS1046",description:"Devices",date:"2022-04-27T00:00:00.000Z",formattedDate:"April 27, 2022",tags:[{label:"test",permalink:"/blog/tags/test"},{label:"zerotier",permalink:"/blog/tags/zerotier"},{label:"nxp",permalink:"/blog/tags/nxp"}],readingTime:2.8,hasTruncateMarker:!0,authors:[{name:"IgorKha",url:"https://github.com/IgorKha",imageURL:"https://github.com/IgorKha.png",key:"IgorKha"}],frontMatter:{slug:"Bandwidth-ZeroTier-on-NXP-LS1046",title:"Bandwidth ZeroTier on NXP LS1046",authors:"IgorKha",tags:["test","zerotier","nxp"]},prevItem:{title:"Arch Linux with Yubico U2F",permalink:"/blog/Arch-Linux-with-Yubico-U2F"}},d={authorsImageUrls:[void 0]},u=[{value:"Devices",id:"devices",level:2},{value:"ZeroTier Flow Rules",id:"zerotier-flow-rules",level:2},{value:"Result",id:"result",level:2}],h={toc:u};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"devices"},"Devices"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"Device")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"OS")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"kernel")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"link")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"ZeroTier ver.")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("a",{parentName:"td",href:"https://www.nxp.com/design/qoriq-developer-resources/layerscape-ls1046a-reference-design-board:LS1046A-RDB"},"NXP LS1046A-RDB")),(0,a.kt)("td",{parentName:"tr",align:"center"},"OpenWRT 21.02.02"),(0,a.kt)("td",{parentName:"tr",align:"center"},"5.4.179"),(0,a.kt)("td",{parentName:"tr",align:"center"},"10Gbps"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"td"},"1.6.6"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("a",{parentName:"td",href:"https://www.forlinx.net/product/ls1046a-single-board-computer-22.html"},"NXP LS1046A Forlinx")),(0,a.kt)("td",{parentName:"tr",align:"center"},"OpenWRT 21.02.02"),(0,a.kt)("td",{parentName:"tr",align:"center"},"5.4.179"),(0,a.kt)("td",{parentName:"tr",align:"center"},"10Gbps"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"td"},"1.6.6"))))),(0,a.kt)("h2",{id:"zerotier-flow-rules"},"ZeroTier Flow Rules"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="default zt flow rules"',title:'"default',zt:!0,flow:!0,'rules"':!0},"drop\n    not ethertype ipv4\n    and not ethertype arp\n    and not ethertype ipv6\n;\naccept;\n")),(0,a.kt)("h2",{id:"result"},"Result"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"parallel-1",label:"iperf 1 thread",default:!0,mdxType:"TabItem"},(0,a.kt)(s.Z,{language:"text",title:"iperf -c 172.22.36.168 -t 30",mdxType:"CodeBlock"},"------------------------------------------------------------\nClient connecting to 172.22.36.168, TCP port 5001\nTCP window size:  238 KByte (default)\n------------------------------------------------------------\n[  3] local 172.22.117.147 port 38266 connected with 172.22.36.168 port 5001\n[ ID] Interval       Transfer     Bandwidth\n[  3]  0.0-30.0 sec  1.47 GBytes   421 Mbits/sec")),(0,a.kt)(l.Z,{value:"parallel-20",label:"iperf 20 threads",mdxType:"TabItem"},(0,a.kt)(s.Z,{language:"text",title:"iperf -c 172.22.36.168 -P 20 -t 60",mdxType:"CodeBlock"},"------------------------------------------------------------\nClient connecting to 172.22.36.168, TCP port 5001\nTCP window size: 2.45 MByte (default)\n------------------------------------------------------------\n[ 19] local 172.22.117.147 port 44320 connected with 172.22.36.168 port 5001\n[  3] local 172.22.117.147 port 44288 connected with 172.22.36.168 port 5001\n[  5] local 172.22.117.147 port 44292 connected with 172.22.36.168 port 5001\n[ 10] local 172.22.117.147 port 44302 connected with 172.22.36.168 port 5001\n[  4] local 172.22.117.147 port 44290 connected with 172.22.36.168 port 5001\n[  6] local 172.22.117.147 port 44294 connected with 172.22.36.168 port 5001\n[  9] local 172.22.117.147 port 44300 connected with 172.22.36.168 port 5001\n[ 17] local 172.22.117.147 port 44316 connected with 172.22.36.168 port 5001\n[ 13] local 172.22.117.147 port 44308 connected with 172.22.36.168 port 5001\n[  8] local 172.22.117.147 port 44298 connected with 172.22.36.168 port 5001\n[ 18] local 172.22.117.147 port 44318 connected with 172.22.36.168 port 5001\n[ 14] local 172.22.117.147 port 44310 connected with 172.22.36.168 port 5001\n[ 21] local 172.22.117.147 port 44324 connected with 172.22.36.168 port 5001\n[  7] local 172.22.117.147 port 44296 connected with 172.22.36.168 port 5001\n[ 20] local 172.22.117.147 port 44322 connected with 172.22.36.168 port 5001\n[ 12] local 172.22.117.147 port 44306 connected with 172.22.36.168 port 5001\n[ 11] local 172.22.117.147 port 44304 connected with 172.22.36.168 port 5001\n[ 16] local 172.22.117.147 port 44314 connected with 172.22.36.168 port 5001\n[ 22] local 172.22.117.147 port 44326 connected with 172.22.36.168 port 5001\n[ 15] local 172.22.117.147 port 44312 connected with 172.22.36.168 port 5001\n[ ID] Interval       Transfer     Bandwidth\n[  4]  0.0-60.0 sec   153 MBytes  21.3 Mbits/sec\n[  8]  0.0-60.0 sec   165 MBytes  23.1 Mbits/sec\n[ 18]  0.0-60.0 sec   164 MBytes  23.0 Mbits/sec\n[  7]  0.0-60.0 sec   167 MBytes  23.3 Mbits/sec\n[ 11]  0.0-60.0 sec   180 MBytes  25.2 Mbits/sec\n[ 19]  0.0-60.1 sec   135 MBytes  18.8 Mbits/sec\n[ 20]  0.0-60.1 sec   148 MBytes  20.6 Mbits/sec\n[ 15]  0.0-60.1 sec   207 MBytes  28.9 Mbits/sec\n[ 22]  0.0-60.2 sec   204 MBytes  28.5 Mbits/sec\n[ 17]  0.0-60.2 sec   145 MBytes  20.2 Mbits/sec\n[  5]  0.0-60.3 sec   141 MBytes  19.6 Mbits/sec\n[ 14]  0.0-60.3 sec   148 MBytes  20.7 Mbits/sec\n[ 12]  0.0-60.3 sec   174 MBytes  24.2 Mbits/sec\n[ 16]  0.0-60.3 sec   145 MBytes  20.2 Mbits/sec\n[ 21]  0.0-60.3 sec   160 MBytes  22.3 Mbits/sec\n[ 10]  0.0-60.4 sec   195 MBytes  27.1 Mbits/sec\n[  6]  0.0-60.4 sec   192 MBytes  26.6 Mbits/sec\n[  9]  0.0-60.7 sec   104 MBytes  14.3 Mbits/sec\n[ 13]  0.0-60.9 sec   149 MBytes  20.6 Mbits/sec\n[  3]  0.0-61.0 sec   142 MBytes  19.6 Mbits/sec\n[SUM]  0.0-61.0 sec  3.14 GBytes   443 Mbits/sec"))))}m.isMDXComponent=!0}}]);