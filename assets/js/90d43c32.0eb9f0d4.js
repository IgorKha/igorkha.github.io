"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4829],{5162:(e,t,r)=>{r.d(t,{Z:()=>l});var n=r(7294),a=r(6010);const o={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:r,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,l),hidden:r},t)}},4866:(e,t,r)=>{r.d(t,{Z:()=>v});var n=r(7462),a=r(7294),o=r(6010),l=r(2466),s=r(6550),c=r(1980),i=r(7392),u=r(12);function d(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function p(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??d(r);return function(e){const t=(0,i.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:r}=e;const n=(0,s.k6)(),o=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,c._X)(o),(0,a.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(n.location.search);t.set(o,e),n.replace({...n.location,search:t.toString()})}),[o,n])]}function h(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,o=p(e),[l,s]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[c,i]=b({queryString:r,groupId:n}),[d,h]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,o]=(0,u.Nk)(r);return[n,(0,a.useCallback)((e=>{r&&o.set(e)}),[r,o])]}({groupId:n}),w=(()=>{const e=c??d;return m({value:e,tabValues:o})?e:null})();(0,a.useLayoutEffect)((()=>{w&&s(w)}),[w]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),i(e),h(e)}),[i,h,o]),tabValues:o}}var w=r(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:r,selectedValue:s,selectValue:c,tabValues:i}=e;const u=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.o5)(),p=e=>{const t=e.currentTarget,r=u.indexOf(t),n=i[r].value;n!==s&&(d(t),c(n))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const r=u.indexOf(e.currentTarget)+1;t=u[r]??u[0];break}case"ArrowLeft":{const r=u.indexOf(e.currentTarget)-1;t=u[r]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},t)},i.map((e=>{let{value:t,label:r,attributes:l}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:s===t?0:-1,"aria-selected":s===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:p},l,{className:(0,o.Z)("tabs__item",g.tabItem,l?.className,{"tabs__item--active":s===t})}),r??t)})))}function f(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=h(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},a.createElement(k,(0,n.Z)({},e,t)),a.createElement(f,(0,n.Z)({},e,t)))}function v(e){const t=(0,w.Z)();return a.createElement(y,(0,n.Z)({key:String(t)},e))}},1007:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(7294);const a={browserWindow:"browserWindow_my1Q",browserWindowHeader:"browserWindowHeader_jXSR",row:"row_KZDM",buttons:"buttons_uHc7",right:"right_oyze",browserWindowAddressBar:"browserWindowAddressBar_Pd8y",dot:"dot_giz1",browserWindowMenuIcon:"browserWindowMenuIcon_Vhuh",bar:"bar_rrRL",browserWindowBody:"browserWindowBody_Idgs"};function o(e){let{children:t,minHeight:r,text:o="Konsole"}=e;return n.createElement("div",{className:a.browserWindow,style:{minHeight:r}},n.createElement("div",{className:a.browserWindowHeader},n.createElement("div",{className:a.buttons},n.createElement("span",{className:a.dot,style:{background:"#f25f58"}}),n.createElement("span",{className:a.dot,style:{background:"#fbbe3c"}}),n.createElement("span",{className:a.dot,style:{background:"#58cb42"}})),n.createElement("div",{className:"container"},o)),n.createElement("div",{className:a.browserWindowBody},t))}},8340:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>w,frontMatter:()=>i,metadata:()=>d,toc:()=>m});var n=r(7462),a=(r(7294),r(3905)),o=r(4866),l=r(5162),s=r(814),c=r(1007);const i={slug:"Bandwidth-ZeroTier-on-NXP-LS1046",title:"Bandwidth ZeroTier on NXP LS1046",authors:"IgorKha",tags:["benchmark","zerotier","nxp","networks"]},u=void 0,d={permalink:"/blog/Bandwidth-ZeroTier-on-NXP-LS1046",editUrl:"https://github.com/IgorKha/igorkha.github.io/tree/main/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx",source:"@site/blog/2022-04-27-Bandwidth-ZeroTier-on-NXP-LS1046.mdx",title:"Bandwidth ZeroTier on NXP LS1046",description:"Devices",date:"2022-04-27T00:00:00.000Z",formattedDate:"April 27, 2022",tags:[{label:"benchmark",permalink:"/blog/tags/benchmark"},{label:"zerotier",permalink:"/blog/tags/zerotier"},{label:"nxp",permalink:"/blog/tags/nxp"},{label:"networks",permalink:"/blog/tags/networks"}],readingTime:2.85,hasTruncateMarker:!0,authors:[{name:"IgorKha",url:"https://github.com/IgorKha",imageURL:"https://github.com/IgorKha.png",key:"IgorKha"}],frontMatter:{slug:"Bandwidth-ZeroTier-on-NXP-LS1046",title:"Bandwidth ZeroTier on NXP LS1046",authors:"IgorKha",tags:["benchmark","zerotier","nxp","networks"]},prevItem:{title:"Arch Linux with U2F",permalink:"/blog/arch-linux-with-u2f"}},p={authorsImageUrls:[void 0]},m=[{value:"Devices",id:"devices",level:2},{value:"ZeroTier Flow Rules",id:"zerotier-flow-rules",level:2},{value:"Result",id:"result",level:2}],b={toc:m},h="wrapper";function w(e){let{components:t,...r}=e;return(0,a.kt)(h,(0,n.Z)({},b,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"devices"},"Devices"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"Device")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"OS")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"kernel")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"link")),(0,a.kt)("th",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"th"},"ZeroTier ver.")))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("a",{parentName:"td",href:"https://www.nxp.com/design/qoriq-developer-resources/layerscape-ls1046a-reference-design-board:LS1046A-RDB"},"NXP LS1046A-RDB")),(0,a.kt)("td",{parentName:"tr",align:"center"},"OpenWRT 21.02.02"),(0,a.kt)("td",{parentName:"tr",align:"center"},"5.4.179"),(0,a.kt)("td",{parentName:"tr",align:"center"},"10Gbps"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"td"},"1.6.6"))),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("a",{parentName:"td",href:"https://www.forlinx.net/product/ls1046a-single-board-computer-22.html"},"NXP LS1046A Forlinx")),(0,a.kt)("td",{parentName:"tr",align:"center"},"OpenWRT 21.02.02"),(0,a.kt)("td",{parentName:"tr",align:"center"},"5.4.179"),(0,a.kt)("td",{parentName:"tr",align:"center"},"10Gbps"),(0,a.kt)("td",{parentName:"tr",align:"center"},(0,a.kt)("strong",{parentName:"td"},"1.6.6"))))),(0,a.kt)("h2",{id:"zerotier-flow-rules"},"ZeroTier Flow Rules"),(0,a.kt)(c.Z,{mdxType:"BrowserWindow"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-text",metastring:'title="default zt flow rules"',title:'"default',zt:!0,flow:!0,'rules"':!0},"drop\n    not ethertype ipv4\n    and not ethertype arp\n    and not ethertype ipv6\n;\naccept;\n"))),(0,a.kt)("h2",{id:"result"},"Result"),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(l.Z,{value:"parallel-1",label:"iperf 1 thread",default:!0,mdxType:"TabItem"},(0,a.kt)(c.Z,{mdxType:"BrowserWindow"},(0,a.kt)(s.Z,{language:"text",title:"iperf -c 172.22.36.168 -t 30",mdxType:"CodeBlock"},"------------------------------------------------------------\nClient connecting to 172.22.36.168, TCP port 5001\nTCP window size:  238 KByte (default)\n------------------------------------------------------------\n[  3] local 172.22.117.147 port 38266 connected with 172.22.36.168 port 5001\n[ ID] Interval       Transfer     Bandwidth\n[  3]  0.0-30.0 sec  1.47 GBytes   421 Mbits/sec"))),(0,a.kt)(l.Z,{value:"parallel-20",label:"iperf 20 threads",mdxType:"TabItem"},(0,a.kt)(c.Z,{mdxType:"BrowserWindow"},(0,a.kt)(s.Z,{language:"text",title:"iperf -c 172.22.36.168 -P 20 -t 60",mdxType:"CodeBlock"},"------------------------------------------------------------\nClient connecting to 172.22.36.168, TCP port 5001\nTCP window size: 2.45 MByte (default)\n------------------------------------------------------------\n[ 19] local 172.22.117.147 port 44320 connected with 172.22.36.168 port 5001\n[  3] local 172.22.117.147 port 44288 connected with 172.22.36.168 port 5001\n[  5] local 172.22.117.147 port 44292 connected with 172.22.36.168 port 5001\n[ 10] local 172.22.117.147 port 44302 connected with 172.22.36.168 port 5001\n[  4] local 172.22.117.147 port 44290 connected with 172.22.36.168 port 5001\n[  6] local 172.22.117.147 port 44294 connected with 172.22.36.168 port 5001\n[  9] local 172.22.117.147 port 44300 connected with 172.22.36.168 port 5001\n[ 17] local 172.22.117.147 port 44316 connected with 172.22.36.168 port 5001\n[ 13] local 172.22.117.147 port 44308 connected with 172.22.36.168 port 5001\n[  8] local 172.22.117.147 port 44298 connected with 172.22.36.168 port 5001\n[ 18] local 172.22.117.147 port 44318 connected with 172.22.36.168 port 5001\n[ 14] local 172.22.117.147 port 44310 connected with 172.22.36.168 port 5001\n[ 21] local 172.22.117.147 port 44324 connected with 172.22.36.168 port 5001\n[  7] local 172.22.117.147 port 44296 connected with 172.22.36.168 port 5001\n[ 20] local 172.22.117.147 port 44322 connected with 172.22.36.168 port 5001\n[ 12] local 172.22.117.147 port 44306 connected with 172.22.36.168 port 5001\n[ 11] local 172.22.117.147 port 44304 connected with 172.22.36.168 port 5001\n[ 16] local 172.22.117.147 port 44314 connected with 172.22.36.168 port 5001\n[ 22] local 172.22.117.147 port 44326 connected with 172.22.36.168 port 5001\n[ 15] local 172.22.117.147 port 44312 connected with 172.22.36.168 port 5001\n[ ID] Interval       Transfer     Bandwidth\n[  4]  0.0-60.0 sec   153 MBytes  21.3 Mbits/sec\n[  8]  0.0-60.0 sec   165 MBytes  23.1 Mbits/sec\n[ 18]  0.0-60.0 sec   164 MBytes  23.0 Mbits/sec\n[  7]  0.0-60.0 sec   167 MBytes  23.3 Mbits/sec\n[ 11]  0.0-60.0 sec   180 MBytes  25.2 Mbits/sec\n[ 19]  0.0-60.1 sec   135 MBytes  18.8 Mbits/sec\n[ 20]  0.0-60.1 sec   148 MBytes  20.6 Mbits/sec\n[ 15]  0.0-60.1 sec   207 MBytes  28.9 Mbits/sec\n[ 22]  0.0-60.2 sec   204 MBytes  28.5 Mbits/sec\n[ 17]  0.0-60.2 sec   145 MBytes  20.2 Mbits/sec\n[  5]  0.0-60.3 sec   141 MBytes  19.6 Mbits/sec\n[ 14]  0.0-60.3 sec   148 MBytes  20.7 Mbits/sec\n[ 12]  0.0-60.3 sec   174 MBytes  24.2 Mbits/sec\n[ 16]  0.0-60.3 sec   145 MBytes  20.2 Mbits/sec\n[ 21]  0.0-60.3 sec   160 MBytes  22.3 Mbits/sec\n[ 10]  0.0-60.4 sec   195 MBytes  27.1 Mbits/sec\n[  6]  0.0-60.4 sec   192 MBytes  26.6 Mbits/sec\n[  9]  0.0-60.7 sec   104 MBytes  14.3 Mbits/sec\n[ 13]  0.0-60.9 sec   149 MBytes  20.6 Mbits/sec\n[  3]  0.0-61.0 sec   142 MBytes  19.6 Mbits/sec\n[SUM]  0.0-61.0 sec  3.14 GBytes   443 Mbits/sec")))))}w.isMDXComponent=!0}}]);